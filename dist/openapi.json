{
  "openapi": "3.0.3",
  "info": {
    "title": "",
    "version": "1.0.0"
  },
  "servers": [],
  "paths": {
    "/restinfo": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RESTInfoConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RESTInfoConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RESTInfoConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getRESTInfoConfig",
        "summary": "Retrieves the REST configuration information"
      }
    },
    "/v2/machine/monitoring/current": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentMachineStatistics"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentMachineStatistics"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentMachineStatistics"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getCurrentMachineStatistics",
        "summary": "Retrieves current statictics for the machine"
      }
    },
    "/v2/machine/monitoring/historic": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricMachineStatistics"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricMachineStatistics"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricMachineStatistics"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getHistoricMachineStatistics",
        "summary": "Retrieves historic statictics for the machine"
      }
    },
    "/v2/servers": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServersConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServersConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServersConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getServersConfig",
        "summary": "Retrieves the list of Servers"
      }
    },
    "/v2/servers/{serverName}": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServerConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServerConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getServerConfig",
        "summary": "Retrieves the Server configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putServerConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ServerConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ServerConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the Server configuration"
      }
    },
    "/v2/servers/{serverName}/actions/{action}": {
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The action which should be performed by the server",
            "in": "path",
            "name": "action",
            "required": true,
            "schema": {
              "enum": [
                "heapDump",
                "restart",
                "stackTrace",
                "start",
                "stop"
              ],
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The file location to use when creating a heap dump or stack trace. By default the installation location and file are named appropriately for a heap dump or stack trace",
            "in": "query",
            "name": "filename",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 18647 or later.",
        "operationId": "putServerAction",
        "summary": "Tells the Server to perform an action"
      }
    },
    "/v2/servers/{serverName}/adv": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerConfigAdv"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServerConfigAdv"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServerConfigAdv"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getServerConfigAdv",
        "summary": "Retrieves the advanced Server configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putServerConfigAdv",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerConfigAdv",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ServerConfigAdv",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ServerConfigAdv",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the advanced Server configuration"
      }
    },
    "/v2/servers/{serverName}/logfiles": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The order of files in serverLogs list",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "default": "newestFirst",
              "enum": [
                "newestFirst",
                "oldestFirst"
              ],
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerLogFilesConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServerLogFilesConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServerLogFilesConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getServerLogFilesConfig",
        "summary": "Retrieves the list of server log files"
      }
    },
    "/v2/servers/{serverName}/logfiles/{logName}": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The number of log lines requested, where a postive number indicates log lines after startOffset and a negative number indicate log lines before startOffset",
            "in": "query",
            "name": "lineCount",
            "required": false,
            "schema": {
              "default": "100",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The byte offset in the file at which to begin getting log lines",
            "in": "query",
            "name": "startOffset",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "A string containing a list of predefined search filters separated by | where valid strings are noDebug,noInfo,noWarn,noError,noHeader,noColumnHeadings",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "A string containing a literal string on which to filter or a regex",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "Indicates if the 'search' parameter is a regex or a literal string ",
            "in": "query",
            "name": "regexSearch",
            "required": false,
            "schema": {
              "default": "false",
              "enum": [
                "false",
                "true"
              ],
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "Returns the first x lines from the requested log file, the overrides the startoffset and linecount values",
            "in": "query",
            "name": "head",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "Returns the last x lines from the requested log file, the overrides the startoffset and linecount values",
            "in": "query",
            "name": "tail",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the log",
            "in": "path",
            "name": "logName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerLogFileConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServerLogFileConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServerLogFileConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getServerLogFileConfig",
        "summary": "Retrieves the contents of a Server Log with the specified log name"
      }
    },
    "/v2/servers/{serverName}/logfiles/{logName}/download": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the log",
            "in": "path",
            "name": "logName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerLogFileDownloadConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServerLogFileDownloadConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServerLogFileDownloadConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getServerLogFileDownloadConfig",
        "summary": "Retrieves the Server Log file for the specified log name, zipped"
      }
    },
    "/v2/servers/{serverName}/logs": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerLogTypesConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServerLogTypesConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServerLogTypesConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getServerLogTypesConfig",
        "summary": "Retrieves the list of available server Log Types"
      }
    },
    "/v2/servers/{serverName}/logs/{logType}": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The number of log lines requested, where a postive number indicates log lines after startOffset and a negative number indicate log lines before startOffset",
            "in": "query",
            "name": "lineCount",
            "required": false,
            "schema": {
              "default": "100",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The byte offset in the file at which to begin getting log lines",
            "in": "query",
            "name": "startOffset",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "A string containing a list of predefined search filters separated by | where valid strings are noDebug,noInfo,noWarn,noError,noHeader,noColumnHeadings",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "A string containing a literal string on which to filter or a regex",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "Indicates if the 'search' parameter is a regex or a literal string ",
            "in": "query",
            "name": "regexSearch",
            "required": false,
            "schema": {
              "default": "false",
              "enum": [
                "false",
                "true"
              ],
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "Returns the first x lines from the requested log file, the overrides the startoffset and linecount values",
            "in": "query",
            "name": "head",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "Returns the last x lines from the requested log file, the overrides the startoffset and linecount values",
            "in": "query",
            "name": "tail",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The start date to filter on (UTC milliseconds)",
            "in": "query",
            "name": "startDate",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The end date to filter on (UTC milliseconds)",
            "in": "query",
            "name": "endDate",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The type of the log",
            "in": "path",
            "name": "logType",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerLogsConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServerLogsConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServerLogsConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getServerLogsConfig",
        "summary": "Retrieves the contents of multiple Server Logs with the specified type in the log name"
      }
    },
    "/v2/servers/{serverName}/sourcecontrol/drivernames": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceDriverNamesList"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SourceDriverNamesList"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SourceDriverNamesList"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getSourceDriverNamesList",
        "summary": "Get the list of source control drivers"
      }
    },
    "/v2/servers/{serverName}/licenses": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerLicensesConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServerLicensesConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServerLicensesConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getServerLicensesConfig",
        "summary": "Retrieves the list of server Licenses"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putServerLicensesConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerLicensesConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ServerLicensesConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ServerLicensesConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the Server License list"
      }
    },
    "/v2/servers/{serverName}/listeners": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerListenersConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServerListenersConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServerListenersConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getServerListenersConfig",
        "summary": "Retrieves the list of server Listeners"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putServerListenersConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerListenersConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ServerListenersConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ServerListenersConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the server Listeners list"
      }
    },
    "/v2/servers/{serverName}/log4j": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Log4js"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Log4js"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Log4js"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getLog4js",
        "summary": "Retrieves the Server log4j configuration"
      }
    },
    "/v2/servers/{serverName}/log4j/actions/{action}": {
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The action which should be performed by the server",
            "in": "path",
            "name": "action",
            "required": true,
            "schema": {
              "enum": [
                "reload"
              ],
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putLog4jsAction",
        "summary": "Tells the log4j system to perform an action"
      }
    },
    "/v2/servers/{serverName}/log4j/{loggerName}/actions/{action}": {
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The action which should be performed by the server",
            "in": "path",
            "name": "action",
            "required": true,
            "schema": {
              "enum": [
                "debug",
                "error",
                "fatal",
                "info",
                "reload",
                "warn"
              ],
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The logger name needed for this REST call",
            "in": "path",
            "name": "loggerName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putLog4jAction",
        "summary": "Tells the specified log4j logger to perform an action"
      }
    },
    "/v2/servers/{serverName}/mediacache": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getMediaCacheConfig",
        "summary": "Retrieves the server MediaCache configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putMediaCacheConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the server MediaCache configuration"
      }
    },
    "/v2/servers/{serverName}/mediacache/adv": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheConfigAdv"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheConfigAdv"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheConfigAdv"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getMediaCacheConfigAdv",
        "summary": "Retrieves the advanced MediaCache configuration"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postMediaCacheConfigAdv",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheConfigAdv",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheConfigAdv",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheConfigAdv",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds an advanced MediaCache configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putMediaCacheConfigAdv",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheConfigAdv",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheConfigAdv",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheConfigAdv",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the advanced MediaCache configuration"
      }
    },
    "/v2/servers/{serverName}/mediacache/sources": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheSourcesConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheSourcesConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheSourcesConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getMediaCacheSourcesConfig",
        "summary": "Retrieves the list of MediaCache Sources"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postMediaCacheSourcesConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheSourceConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheSourceConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheSourceConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds the specified MediaCache Source to the list"
      }
    },
    "/v2/servers/{serverName}/mediacache/sources/{sourceName}": {
      "delete": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "deleteMediaCacheSourceConfig",
        "summary": "Deletes the specified MediaCache Source configuration"
      },
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheSourceConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheSourceConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheSourceConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getMediaCacheSourceConfig",
        "summary": "Retrieves the specified MediaCache Source configuration"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postMediaCacheSourceConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheSourceConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheSourceConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheSourceConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds the specified MediaCache Source configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putMediaCacheSourceConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheSourceConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheSourceConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheSourceConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the specified MediaCache Source configuration"
      }
    },
    "/v2/servers/{serverName}/mediacache/sources/{sourceName}/adv": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "sourceName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheSourceConfigAdv"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheSourceConfigAdv"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheSourceConfigAdv"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getMediaCacheSourceConfigAdv",
        "summary": "Retrieves the specified advanced MediaCache Source configuration"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "sourceName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postMediaCacheSourceConfigAdv",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheSourceConfigAdv",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheSourceConfigAdv",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheSourceConfigAdv",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds the specified advanced MediaCache Source configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "sourceName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putMediaCacheSourceConfigAdv",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheSourceConfigAdv",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheSourceConfigAdv",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheSourceConfigAdv",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the specified advanced MediaCache Source configuration"
      }
    },
    "/v2/servers/{serverName}/mediacache/stores": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheStoresConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheStoresConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheStoresConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getMediaCacheStoresConfig",
        "summary": "Retrieves the list of MediaCache Stores"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postMediaCacheStoresConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheStoreConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheStoreConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheStoreConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds the specified MediaCache Store to the list"
      }
    },
    "/v2/servers/{serverName}/mediacache/stores/{storeName}": {
      "delete": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "deleteMediaCacheStoreConfig",
        "summary": "Deletes the specified MediaCache Store configuration"
      },
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheStoreConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheStoreConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheStoreConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getMediaCacheStoreConfig",
        "summary": "Retrieves the specified MediaCache Store configuration"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postMediaCacheStoreConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheStoreConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheStoreConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheStoreConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds the specified MediaCache Store configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putMediaCacheStoreConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheStoreConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheStoreConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheStoreConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the specified MediaCache Store configuration"
      }
    },
    "/v2/servers/{serverName}/mediacache/stores/{storeName}/adv": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "storeName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheStoreConfigAdv"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheStoreConfigAdv"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheStoreConfigAdv"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getMediaCacheStoreConfigAdv",
        "summary": "Retrieves the specified advanced MediaCache Store configuration"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "storeName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postMediaCacheStoreConfigAdv",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheStoreConfigAdv",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheStoreConfigAdv",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheStoreConfigAdv",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds the specified advanced MediaCache Store configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "storeName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putMediaCacheStoreConfigAdv",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheStoreConfigAdv",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheStoreConfigAdv",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheStoreConfigAdv",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the specified advanced MediaCache Store configuration"
      }
    },
    "/v2/servers/{serverName}/mediacasters": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCastersConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCastersConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCastersConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getMediaCastersConfig",
        "summary": "Retrieves the list of MediaCasters"
      }
    },
    "/v2/servers/{serverName}/mediacasters/{mediacastername}": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "mediacastername",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCasterConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCasterConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCasterConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getMediaCasterConfig",
        "summary": "Retrieves the specified MediaCaster configuration"
      }
    },
    "/v2/servers/{serverName}/monitoring": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonitoringConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MonitoringConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MonitoringConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getMonitoringConfig",
        "summary": "Retrieves the server monitoring configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putMonitoringConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MonitoringConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MonitoringConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/MonitoringConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the server monitoring configuration"
      }
    },
    "/v2/servers/{serverName}/monitoring/historic": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricServerStatistics"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricServerStatistics"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricServerStatistics"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getHistoricServerStatistics",
        "summary": "Retrieves the server historical statictics"
      }
    },
    "/v2/servers/{serverName}/publishers": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublishersConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PublishersConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PublishersConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getPublishersConfig",
        "summary": "Retrieves the list of server Publishers"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postPublishersConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublisherConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PublisherConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PublisherConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds a new Publisher to the list"
      }
    },
    "/v2/servers/{serverName}/publishers/{publisher}": {
      "delete": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "deletePublisherConfig",
        "summary": "Deletes the specified Publisher configuration"
      },
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublisherConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PublisherConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PublisherConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getPublisherConfig",
        "summary": "Retrieves the specified Publisher configuration"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postPublisherConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublisherConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PublisherConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PublisherConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds the specified Publisher configuration"
      }
    },
    "/v2/servers/{serverName}/status": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerStatusConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServerStatusConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServerStatusConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getServerStatusConfig",
        "summary": "Retrieves the server Status"
      }
    },
    "/v2/servers/{serverName}/transcoder": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getTranscoderConfig",
        "summary": "Retrieves the Transcoder information"
      }
    },
    "/v2/servers/{serverName}/tune": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerTuneConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServerTuneConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServerTuneConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getServerTuneConfig",
        "summary": "Retrieves the server Tuning configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putServerTuneConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerTuneConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ServerTuneConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ServerTuneConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the server Tuning configuration"
      }
    },
    "/v2/servers/{serverName}/users": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UsersConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UsersConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getUsersConfig",
        "summary": "Retrieves the list of server Users"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postUsersConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UserConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/UserConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds a new server User to the list"
      }
    },
    "/v2/servers/{serverName}/users/{userName}": {
      "delete": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The user name",
            "in": "path",
            "name": "userName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "deleteUserConfig",
        "summary": "Deletes the specified User configuration"
      },
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The user name",
            "in": "path",
            "name": "userName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getUserConfig",
        "summary": "Retrieves the specified User configuration"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The user name",
            "in": "path",
            "name": "userName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postUserConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UserConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/UserConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds the specified User configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The user name",
            "in": "path",
            "name": "userName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putUserConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UserConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/UserConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the specified User configuration"
      }
    },
    "/v2/servers/{serverName}/vhosts": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VHostsConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/VHostsConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/VHostsConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getVHostsConfig",
        "summary": "Retrieves the list of VHosts"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The vhost name",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VHostConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/VHostConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/VHostConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getVHostConfig",
        "summary": "Retrieves the specified VHost configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The vhost name",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putVHostConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VHostConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/VHostConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/VHostConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the specified VHost configuration"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/actions/{action}": {
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The action which should be performed by the server",
            "in": "path",
            "name": "action",
            "required": true,
            "schema": {
              "enum": [
                "restart",
                "start",
                "stop"
              ],
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the current VHost the action will be performed on",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putVHostAction"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/adv": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VHostConfigAdv"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/VHostConfigAdv"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/VHostConfigAdv"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getVHostConfigAdv",
        "summary": "Retrieves the specified advanced VHost configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putVHostConfigAdv",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VHostConfigAdv",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/VHostConfigAdv",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/VHostConfigAdv",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the specified advanced VHost configuration"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/hostports": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostPortsConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HostPortsConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HostPortsConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getHostPortsConfig",
        "summary": "Retrieves the list of server HostPorts for the specified vhost"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/hostports/{portname}": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The port name",
            "in": "path",
            "name": "portname",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostPortConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HostPortConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HostPortConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getHostPortConfig",
        "summary": "Retrieves the HostPort for the specifed vhost and port"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/hostports/{portname}/adv": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The port name",
            "in": "path",
            "name": "portname",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostPortConfigAdv"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HostPortConfigAdv"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HostPortConfigAdv"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getHostPortConfigAdv",
        "summary": "Retrieves the advanced HostPort configuration for the specified vhost and port"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The port name",
            "in": "path",
            "name": "portname",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putHostPortConfigAdv",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostPortConfigAdv",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/HostPortConfigAdv",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/HostPortConfigAdv",
                "uniqueItems": false
              }
            }
          },
          "required": true
        }
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/hostports/{portname}/httpproviders/{baseClass}": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "portname",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "Base class path",
            "in": "path",
            "name": "baseClass",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPProviderConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPProviderConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPProviderConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getHTTPProviderConfig",
        "summary": "Retrieves the HTTPProviders for the specifed vhost, port and baseclass"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/hostports/{portname}/ssl": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The port name",
            "in": "path",
            "name": "portname",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SSLConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SSLConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SSLConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getSSLConfig",
        "summary": "Retrieves the SSL configuration for the specified vhost and port"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The port name",
            "in": "path",
            "name": "portname",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putSSLConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SSLConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SSLConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/SSLConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the SSL configuration for the specified vhost and port"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/mediacache/stores": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheStoreList"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheStoreList"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheStoreList"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15942 or later.",
        "operationId": "getMediaCacheStoreList",
        "summary": "Retrieves all entries in the MediaCache system"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/mediacache/stores/actions/{action}": {
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The action which should be performed by the server",
            "in": "path",
            "name": "action",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The file or stream name item to be used in all rest action requests",
            "in": "query",
            "name": "filename",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the current VHost the action will be performed on",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15942 or later.",
        "operationId": "putMediaCacheStoreAction"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/monitoring/current": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentVHostStatistics"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentVHostStatistics"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentVHostStatistics"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getCurrentVHostStatistics",
        "summary": "Retrieves the current VHost statistics"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/monitoring/historic": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricVHostStatistics"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricVHostStatistics"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricVHostStatistics"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getHistoricVHostStatistics",
        "summary": "Retrieves the historic VHost statistics"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/publishers": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The vhost name",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublishersVhostConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PublishersVhostConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PublishersVhostConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getPublishersVhostConfig",
        "summary": "Retrieves the list of Publishers for the specified VHost"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The vhost name",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postPublishersVhostConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublisherVhostConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PublisherVhostConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PublisherVhostConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Add a Publisher to list of Publishers for the specified VHost"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/publishers/{publisherName}": {
      "delete": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The vhost name",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The publisher name",
            "in": "path",
            "name": "publisherName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "deletePublisherVhostConfig",
        "summary": "Deletes the specified Publisher configuration"
      },
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The vhost name",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The publisher name",
            "in": "path",
            "name": "publisherName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublisherVhostConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PublisherVhostConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PublisherVhostConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getPublisherVhostConfig",
        "summary": "Retrieves the specified Publisher configuration"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The vhost name",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The publisher name",
            "in": "path",
            "name": "publisherName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postPublisherVhostConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublisherVhostConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PublisherVhostConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PublisherVhostConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds the specified Publisher configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The vhost name",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The publisher name",
            "in": "path",
            "name": "publisherName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putPublisherVhostConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublisherVhostConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PublisherVhostConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PublisherVhostConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the specified Publisher configuration"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/sdpfiles": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SDPFilesConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SDPFilesConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SDPFilesConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getSDPFilesConfig",
        "summary": "Retrieves the list of SDP Files for the specified VHost"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/sdpfiles/{sdpfileName}": {
      "delete": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The SDP file name without the extension",
            "in": "path",
            "name": "sdpfileName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "deleteSDPFileConfig",
        "summary": "Deletes the specified SDP file"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/sdpfiles/{sdpfileName}/actions/{action}": {
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The action which should be performed by the server",
            "in": "path",
            "name": "action",
            "required": true,
            "schema": {
              "enum": [
                "connect"
              ],
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the application to connect to",
            "in": "query",
            "name": "connectAppName",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the application instance to connect to",
            "in": "query",
            "name": "appInstance",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The MediaCasterType to use for the connection ",
            "in": "query",
            "name": "mediaCasterType",
            "required": true,
            "schema": {
              "default": "rtp",
              "enum": [
                "rtp",
                " rtp-record",
                "shoutcast",
                "shoutcast-record",
                "liverepeater"
              ],
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the current VHost the action will be performed on",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The SDP file name needed for this REST call",
            "in": "path",
            "name": "sdpfileName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putSDPFileAction"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/smilfiles": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the current VHost the action will be performed on",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SMILFilesConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SMILFilesConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SMILFilesConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getSMILFilesConfig",
        "summary": "Retrieves the list of SMIL Files for the specified VHost"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the current VHost the action will be performed on",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postSMILFilesConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SMILFileConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SMILFileConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/SMILFileConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds a SMIL File to the list of SMIL Files for the specified VHost"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/smilfiles/{smilfileName}": {
      "delete": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The SMIL file name without the extension",
            "in": "path",
            "name": "smilfileName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "deleteSMILFileConfig",
        "summary": "Deletes the specified SMIL File configuration"
      },
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The SMIL file name without the extension",
            "in": "path",
            "name": "smilfileName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SMILFileConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SMILFileConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SMILFileConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getSMILFileConfig",
        "summary": "Retrieves the specified SMIL File configuration"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The SMIL file name without the extension",
            "in": "path",
            "name": "smilfileName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postSMILFileConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SMILFileConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SMILFileConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/SMILFileConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds the specified SMIL File configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The SMIL file name without the extension",
            "in": "path",
            "name": "smilfileName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putSMILFileConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SMILFileConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SMILFileConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/SMILFileConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the specified SMIL File configuration"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/smilfiles/{smilfileName}/actions/{action}": {
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The action which should be performed by the server",
            "in": "path",
            "name": "action",
            "required": true,
            "schema": {
              "enum": [
                "connect",
                "copy"
              ],
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the application to connect to",
            "in": "query",
            "name": "connectAppName",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the application instance to connect to",
            "in": "query",
            "name": "appInstance",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The MediaCasterType to use for the connection ",
            "in": "query",
            "name": "mediaCasterType",
            "required": true,
            "schema": {
              "default": "rtp",
              "enum": [
                "rtp",
                " rtp-record",
                "shoutcast",
                "shoutcast-record",
                "liverepeater"
              ],
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The destination SMIL file name when copying ",
            "in": "query",
            "name": "dstEntryName",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the current VHost the action will be performed on",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The SMIL file, file name needed for this REST call",
            "in": "path",
            "name": "smilfileName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putSMILFileAction"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/startupstreams": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartupStreamsConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StartupStreamsConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StartupStreamsConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getStartupStreamsConfig",
        "summary": "Retrieves the list of Startup Streams for the specified VHost"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postStartupStreamsConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartupStreamConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StartupStreamConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/StartupStreamConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds a Startup Stream to the list of Startup Streams for the specified VHost"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/startupstreams/applications/{appName}/instances/{instanceName}/streams/{streamName}": {
      "delete": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "streamName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "default": "_definst_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "deleteStartupStreamConfig",
        "summary": "Deletes the specified Startup Stream configuration"
      },
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "streamName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "default": "_definst_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartupStreamConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StartupStreamConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StartupStreamConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getStartupStreamConfig",
        "summary": "Retrieves the specified Startup Stream configuration"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "streamName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "default": "_definst_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postStartupStreamConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartupStreamConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StartupStreamConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/StartupStreamConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds the specified Startup Stream configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "streamName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "default": "_definst_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putStartupStreamConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartupStreamConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StartupStreamConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/StartupStreamConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the specified Startup Stream configuration"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/streamfiles": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamFilesConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StreamFilesConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StreamFilesConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getStreamFilesConfig",
        "summary": "Retrieves the list of Stream Files for the specified VHost"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postStreamFilesConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StreamFileConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StreamFileConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/StreamFileConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds a Stream File to the list of Stream Files for the specified VHost"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/streamfiles/{streamfileName}": {
      "delete": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The stream file name without the extension",
            "in": "path",
            "name": "streamfileName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "deleteStreamFileConfig",
        "summary": "Deletes the specified Stream File configuration"
      },
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The stream file name without the extension",
            "in": "path",
            "name": "streamfileName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamFileConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StreamFileConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StreamFileConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getStreamFileConfig",
        "summary": "Retrieves the specified Stream File configuration"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The stream file name without the extension",
            "in": "path",
            "name": "streamfileName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postStreamFileConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StreamFileConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StreamFileConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/StreamFileConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds the specified Stream File configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The stream file name without the extension",
            "in": "path",
            "name": "streamfileName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putStreamFileConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StreamFileConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StreamFileConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/StreamFileConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the specified Stream File configuration"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/streamfiles/{streamfileName}/actions/{action}": {
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The action which should be performed by the server",
            "in": "path",
            "name": "action",
            "required": true,
            "schema": {
              "enum": [
                "connect",
                "copy"
              ],
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the application to connect to",
            "in": "query",
            "name": "connectAppName",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the application instance to connect to",
            "in": "query",
            "name": "appInstance",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The MediaCasterType to use for the connection ",
            "in": "query",
            "name": "mediaCasterType",
            "required": true,
            "schema": {
              "default": "rtp",
              "enum": [
                "rtp",
                " rtp-record",
                "shoutcast",
                "shoutcast-record",
                "liverepeater"
              ],
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The destination stream file name when copying ",
            "in": "query",
            "name": "dstEntryName",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the current VHost the action will be performed on",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The stream file, file name needed for this REST call",
            "in": "path",
            "name": "streamfileName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putStreamFileAction"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/streamfiles/{streamfileName}/adv": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The stream file name without the .stream extension",
            "in": "path",
            "name": "streamfileName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamFileConfigAdv"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StreamFileConfigAdv"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StreamFileConfigAdv"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getStreamFileConfigAdv",
        "summary": "Retrieves the Advanced Stream File configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The stream file name without the .stream extension",
            "in": "path",
            "name": "streamfileName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putStreamFileConfigAdv",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StreamFileConfigAdv",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StreamFileConfigAdv",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/StreamFileConfigAdv",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the Advanced Stream File configuration"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/testPlaybackInfo": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the VHost",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestPlaybackInfoConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TestPlaybackInfoConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TestPlaybackInfoConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getTestPlaybackInfoConfig",
        "summary": "Retrieves the Playback Info for the specifed vhost"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/transcoder": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderConfig1"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderConfig1"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderConfig1"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getTranscoderConfig1",
        "summary": "Retrieves the Transcoder configuration for the specified VHost"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putTranscoderConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderConfig1",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderConfig1",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderConfig1",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the Transcoder configuration for the specified VHost"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the current VHost the action will be performed on",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderTemplatesConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderTemplatesConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderTemplatesConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getTranscoderTemplatesConfig",
        "summary": "Retrieves the list of Transcoder Template Configurations for the specified VHost"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the current VHost the action will be performed on",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postTranscoderTemplatesConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderTemplateConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderTemplateConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderTemplateConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds a Transcoder Templates Configuration to the specified VHost"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}": {
      "delete": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "deleteTranscoderTemplateConfig",
        "summary": "Deletes the specified Trancoder Template configuration"
      },
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderTemplateConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderTemplateConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderTemplateConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getTranscoderTemplateConfig",
        "summary": "Retrieves the specified Trancoder Template configuration"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postTranscoderTemplateConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderTemplateConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderTemplateConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderTemplateConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds the specified Trancoder Template configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putTranscoderTemplateConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderTemplateConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderTemplateConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderTemplateConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the specified Trancoder Template configuration"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/actions/{action}": {
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The action which should be performed by the server",
            "in": "path",
            "name": "action",
            "required": true,
            "schema": {
              "enum": [
                "copy"
              ],
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The destination transcoder template name when copying ",
            "in": "query",
            "name": "dstEntryName",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the current VHost the action will be performed on",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The template name needed for this REST call",
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putTranscoderTemplateAction"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/adv": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderTemplateConfigAdv"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderTemplateConfigAdv"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderTemplateConfigAdv"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getTranscoderTemplateConfigAdv",
        "summary": "Retrieves the Advanced Transcoder Template configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putTranscoderTemplateConfigAdv",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderTemplateConfigAdv",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderTemplateConfigAdv",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderTemplateConfigAdv",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the Advanced Transcoder Template configuration"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/decode/overlays/{overlayName}": {
      "delete": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "overlayName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "deleteTranscoderOverlayDecodeConfig",
        "summary": "Deletes the specified Trancoder Overlay Decode configuration"
      },
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "overlayName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderOverlayDecodeConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderOverlayDecodeConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderOverlayDecodeConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getTranscoderOverlayDecodeConfig",
        "summary": "Retrieves the specified Trancoder Overlay Decode configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "overlayName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putTranscoderOverlayDecodeConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderOverlayDecodeConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderOverlayDecodeConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderOverlayDecodeConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the specified Trancoder Overlay Decode configuration"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/encodes": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderEncodesConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderEncodesConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderEncodesConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getTranscoderEncodesConfig",
        "summary": "Retrieves the list of Transcoder Encode Configurations for the specified VHost"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postTranscoderEncodesConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderEncodeConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderEncodeConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderEncodeConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds a Transcoder Encode Configuration to the specified VHost"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/encodes/{encodeName}": {
      "delete": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "encodeName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "deleteTranscoderEncodeConfig",
        "summary": "Deletes the specified Trancoder Encode configuration"
      },
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "encodeName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderEncodeConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderEncodeConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderEncodeConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getTranscoderEncodeConfig",
        "summary": "Retrieves the specified Trancoder Encode configuration"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "encodeName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postTranscoderEncodeConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderEncodeConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderEncodeConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderEncodeConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds the specified Trancoder Encode configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "encodeName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putTranscoderEncodeConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderEncodeConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderEncodeConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderEncodeConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the specified Trancoder Encode configuration"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/encodes/{encodeName}/adv": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "encodeName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderEncodeConfigAdv"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderEncodeConfigAdv"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderEncodeConfigAdv"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getTranscoderEncodeConfigAdv",
        "summary": "Retrieves the Advanced Transcoder Encode configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "encodeName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putTranscoderEncodeConfigAdv",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderEncodeConfigAdv",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderEncodeConfigAdv",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderEncodeConfigAdv",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the Advanced Transcoder Encode configuration"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/encodes/{encodeName}/overlays/{overlayName}": {
      "delete": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "overlayName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "encodeName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "deleteTranscoderOverlayEncodeConfig",
        "summary": "Deletes the specified Trancoder Overlay Encode configuration"
      },
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "overlayName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "encodeName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderOverlayEncodeConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderOverlayEncodeConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderOverlayEncodeConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getTranscoderOverlayEncodeConfig",
        "summary": "Retrieves the specified Trancoder Overlay Encode configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "overlayName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "encodeName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putTranscoderOverlayEncodeConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderOverlayEncodeConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderOverlayEncodeConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderOverlayEncodeConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the specified Trancoder Overlay Encode configuration"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/streamnamegroups": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderStreamNameGroupsConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderStreamNameGroupsConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderStreamNameGroupsConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getTranscoderStreamNameGroupsConfig",
        "summary": "Retrieves the list of Transcoder Stream Name Groups for the specified Template"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postTranscoderStreamNameGroupsConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderStreamNameGroupConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderStreamNameGroupConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderStreamNameGroupConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds a Transcoder Stream Name Groups Configuration to the specified Template"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/transcoder/templates/{templateName}/streamnamegroups/{groupName}": {
      "delete": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "groupName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "deleteTranscoderStreamNameGroupConfig",
        "summary": "Deletes the specified Trancoder StreamNameGroup configuration"
      },
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "groupName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderStreamNameGroupConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderStreamNameGroupConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderStreamNameGroupConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getTranscoderStreamNameGroupConfig",
        "summary": "Retrieves the specified Trancoder StreamNameGroup configuration"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "groupName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postTranscoderStreamNameGroupConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderStreamNameGroupConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderStreamNameGroupConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderStreamNameGroupConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds the specified Trancoder StreamNameGroup configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "groupName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putTranscoderStreamNameGroupConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderStreamNameGroupConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderStreamNameGroupConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderStreamNameGroupConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the specified Trancoder StreamNameGroup configuration"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/tune": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The vhost name",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VHostTuneConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/VHostTuneConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/VHostTuneConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getVHostTuneConfig",
        "summary": "Retrieves the Tuning configuration for the specifed vhost"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The vhost name",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putVHostTuneConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VHostTuneConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/VHostTuneConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/VHostTuneConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the Tuning configuration for the specifed vhost"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/tunehostports": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The vhost name",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostportsTuneConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HostportsTuneConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HostportsTuneConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getHostportsTuneConfig",
        "summary": "Retrieves the host port configuration used for server tuning for the specified vhost"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The vhost name",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putHostportsTuneConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostportsTuneConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/HostportsTuneConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/HostportsTuneConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the host port configuration used for server tuning for the specified vhost"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationsConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationsConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationsConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getApplicationsConfig",
        "summary": "Retrieves the list of Applications for the specifed vhost"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postApplicationsConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds an Application to the list of Applications  for the specifed vhost"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}": {
      "delete": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "deleteApplicationConfig",
        "summary": "Deletes the specified Application configuration"
      },
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getApplicationConfig",
        "summary": "Retrieves the specified Application configuration"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postApplicationConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds the specified Application configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putApplicationConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the specified Application configuration"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/actions/{action}": {
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The action which should be performed by the server",
            "in": "path",
            "name": "action",
            "required": true,
            "schema": {
              "enum": [
                "copy",
                "restart",
                "shutdown",
                "start"
              ],
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The destination application name when copying ",
            "in": "query",
            "name": "dstEntryName",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the current VHost the action will be performed on",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The application name needed for this REST call",
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putApplicationAction"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/adv": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationConfigAdv"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationConfigAdv"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationConfigAdv"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getApplicationConfigAdv",
        "summary": "Retrieves the specified advanced Application configuration"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postApplicationConfigAdv",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationConfigAdv",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationConfigAdv",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationConfigAdv",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds the specified advanced Application configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putApplicationConfigAdv",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationConfigAdv",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationConfigAdv",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationConfigAdv",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the specified advanced Application configuration"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/drm": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DRMConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DRMConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DRMConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getDRMConfig",
        "summary": "Retrieves the DRM configuration for the specified Application"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putDRMConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DRMConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DRMConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DRMConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the DRM configuration for the specified Application"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/drm/adv": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DRMConfigAdv"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DRMConfigAdv"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DRMConfigAdv"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getDRMConfigAdv",
        "summary": "Retrieves the advanced DRM configuration for the specified Application"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putDRMConfigAdv",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DRMConfigAdv",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DRMConfigAdv",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DRMConfigAdv",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the advanced DRM configuration for the specified Application"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/drm/buydrmmapfile": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuyDRMStreamMapsConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BuyDRMStreamMapsConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BuyDRMStreamMapsConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getBuyDRMStreamMapsConfig",
        "summary": "Retrieves the BuyDRM stream mapfile for the specified Application"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putBuyDRMStreamMapsConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuyDRMStreamMapsConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BuyDRMStreamMapsConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/BuyDRMStreamMapsConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the BuyDRM stream mapfile for the specified Application"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/drm/verimatrixmapfile": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerimatrixStreamMapsConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/VerimatrixStreamMapsConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/VerimatrixStreamMapsConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getVerimatrixStreamMapsConfig",
        "summary": "Retrieves the Verimatrix stream mapfile for the specified Application"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putVerimatrixStreamMapsConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerimatrixStreamMapsConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/VerimatrixStreamMapsConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/VerimatrixStreamMapsConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the Verimatrix stream mapfile for the specified Application"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/dvr": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DVRConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DVRConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DVRConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getDVRConfig",
        "summary": "Retrieves the DVR configuration for the specified Application"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putDVRConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DVRConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DVRConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DVRConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the DVR configuration for the specified Application"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/dvr/adv": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DVRConfigAdv"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DVRConfigAdv"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DVRConfigAdv"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getDVRConfigAdv",
        "summary": "Retrieves the advanced DVR configuration for the specified Application"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putDVRConfigAdv",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DVRConfigAdv",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DVRConfigAdv",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DVRConfigAdv",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the advanced DVR configuration for the specified Application"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstancesConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InstancesConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InstancesConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getInstancesConfig",
        "summary": "Retrieves the list of Instances for the specified Application"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "default": "_definst_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getInstanceConfig",
        "summary": "Retrieves the specified Application Instance information"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/actions/{action}": {
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The action which should be performed by the server",
            "in": "path",
            "name": "action",
            "required": true,
            "schema": {
              "enum": [
                "start"
              ],
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the current VHost the action will be performed on",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The application name needed for this REST call",
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The application instance name needed for this REST call",
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "default": "_definst_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putInstanceAction"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/dvrstores": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "default": "_definst_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DvrRESTConverterStores"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DvrRESTConverterStores"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DvrRESTConverterStores"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15942 or later.",
        "operationId": "getDvrRESTConverterStores",
        "summary": "Retrieves the list of DVR stores associated with this application instance"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/dvrstores/actions/{action}": {
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The action which should be performed by the server",
            "in": "path",
            "name": "action",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The file location to use when converting a nDVR store, the default is configured as the StorageDir in the application in use",
            "in": "query",
            "name": "dvrConverterDefaultFileDestination",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "Indicates if the conversion should have debugging enabled, can be true or false, default is false",
            "in": "query",
            "name": "dvrConverterDebugConversions",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "Indicates if the conversion should continue even if errors are detected, can be true or false, default is true",
            "in": "query",
            "name": "dvrConverterContinueOnSourceErrors",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "Indicates if the audio/video offset should be detected and conversion only started after the sync in no longer detected or over default allowable time. Can be true or false, default is false",
            "in": "query",
            "name": "dvrConverterAudioVideoSyncEnable",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "Indicates the maximum audio/video timecodes can be out of sync",
            "in": "query",
            "name": "dvrConverterAudioVideoMaxOffset",
            "required": false,
            "schema": {
              "default": "200",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "Indicates the maximum time a correct audio/video sync will be searched for before giving up",
            "in": "query",
            "name": "dvrConverterAudioVideoMaxBuffer",
            "required": false,
            "schema": {
              "default": "8000",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "A start time in UTC from where the conversion should start in the store, default is the first entry in the store",
            "in": "query",
            "name": "dvrConverterStartTime",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "A end time in UTC  where the conversion should end in the store, default is to the end of the store",
            "in": "query",
            "name": "dvrConverterEndTime",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "A duration for the conversion either added to the start or subtracted from the end time, if you use duration you can not use start and end",
            "in": "query",
            "name": "dvrConverterDuration",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "Indicates the output filename if not using the default, which is the name of the store being converted",
            "in": "query",
            "name": "dvrConverterOutputFilename",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The comma-separated list of stores to convert",
            "in": "query",
            "name": "dvrConverterStoreList",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the current VHost the action will be performed on",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The application name needed for this REST call",
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The application instance name needed for this REST call",
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "default": "_definst_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15942 or later.",
        "operationId": "putDvrRESTConverterStoresAction"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/dvrstores/{dvrStoreName}": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "default": "_definst_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "dvrStoreName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DvrRESTConverterStore"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DvrRESTConverterStore"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DvrRESTConverterStore"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15942 or later.",
        "operationId": "getDvrRESTConverterStore",
        "summary": "Retrieves the information about a store/converter associated with the application instance"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/dvrstores/{dvrStoreName}/actions/{action}": {
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The action which should be performed by the server",
            "in": "path",
            "name": "action",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the current VHost the action will be performed on",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The application name needed for this REST call",
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The application instance name needed for this REST call",
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "default": "_definst_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The nDVR store name needed for this REST call",
            "in": "path",
            "name": "dvrStoreName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15942 or later.",
        "operationId": "putDvrRESTConverterStoreAction"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/incomingstreams/{streamName}": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "default": "_definst_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "streamName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncomingStreamConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IncomingStreamConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IncomingStreamConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getIncomingStreamConfig",
        "summary": "Retrieves the Incoming Stream information for the specifed Incoming Stream"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/incomingstreams/{streamName}/actions/{action}": {
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The action which should be performed by the server",
            "in": "path",
            "name": "action",
            "required": true,
            "schema": {
              "enum": [
                "disconnectStream",
                "resetStream"
              ],
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the current VHost the action will be performed on",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The application name needed for this REST call",
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The application instance name needed for this REST call",
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "default": "_definst_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The stream name needed for this REST call",
            "in": "path",
            "name": "streamName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putIncomingStreamAction"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/incomingstreams/{streamName}/encoder/live": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "default": "_definst_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "streamName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The publish username to use in the encoder configuration",
            "in": "query",
            "name": "publishUser",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The IP address then encoder will publish to",
            "in": "query",
            "name": "publishHost",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The Port number the encoder will publish to",
            "in": "query",
            "name": "publishPort",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveEncoderConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LiveEncoderConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LiveEncoderConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getLiveEncoderConfig",
        "summary": "Retrieves the LiveEncoder configuration for the specified IncomingStream"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/incomingstreams/{streamName}/encoder/shorturl": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "default": "_definst_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "streamName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShortUrlEncoderConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ShortUrlEncoderConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ShortUrlEncoderConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getShortUrlEncoderConfig",
        "summary": "Retrieves the Short URL for the LiveEncoder configuration for the specified IncomingStream"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/incomingstreams/{streamName}/monitoring/current": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "default": "_definst_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "streamName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentIncomingStreamStatistics"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentIncomingStreamStatistics"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentIncomingStreamStatistics"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getCurrentIncomingStreamStatistics",
        "summary": "Retrieves the Current Incoming Stream statistics for the specifed Incoming Stream"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/incomingstreams/{streamName}/sourcecontrol": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "default": "_definst_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "streamName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceControlConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SourceControlConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SourceControlConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getSourceControlConfig",
        "summary": "Gets information about the Source Control and it's supported features"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/incomingstreams/{streamName}/sourcecontrol/actions/{action}": {
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The action which should be performed by the server",
            "in": "path",
            "name": "action",
            "required": true,
            "schema": {
              "enum": [
                "captureImage",
                "panTilt",
                "zoom"
              ],
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The VHost name",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The Application name",
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The Application Instance name",
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "default": "_definst_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The Stream name",
            "in": "path",
            "name": "streamName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "No query params available for captureImage. Optional query params for zoom and panTilt: \r\nZoomIn, ZoomOut,\r\n PanTiltUp, PanTiltRight, PanTiltDown, PanTiltLeft, PanTiltHome, PanTiltUpRight, PanTiltDownRight, PanTiltDownLeft, PanTiltUpLeft",
            "in": "query",
            "name": "direction",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putSourceControlAction"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/mediacache/stores/actions/{action}": {
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The action which should be performed by the server",
            "in": "path",
            "name": "action",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The file or stream name item to be used in all rest action requests",
            "in": "query",
            "name": "filename",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the current VHost the action will be performed on",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The application name needed for this REST call",
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The application instance name needed for this REST call",
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "default": "_definst_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15942 or later.",
        "operationId": "putMediaCacheApplicationStoreAction"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/streamgroups": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "default": "_definst_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamGroupsConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StreamGroupsConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StreamGroupsConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getStreamGroupsConfig",
        "summary": "Retrieves the list of Stream Groups for the specified Application Instance"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/streamgroups/{groupName}": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "groupName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "default": "_definst_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamGroupConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StreamGroupConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StreamGroupConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getStreamGroupConfig",
        "summary": "Retrieves the specified StreamGroup configuration"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/streamgroups/{groupName}/actions/{action}": {
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The action which should be performed by the server",
            "in": "path",
            "name": "action",
            "required": true,
            "schema": {
              "enum": [
                "disconnectGroup",
                "removeGroup",
                "resetGroup"
              ],
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the current VHost the action will be performed on",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The application name needed for this REST call",
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The application instance name needed for this REST call",
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "default": "_definst_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The group name needed for this REST call",
            "in": "path",
            "name": "groupName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putStreamGroupAction"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/streamrecorders": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "default": "_definst_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamRecordersConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StreamRecordersConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StreamRecordersConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getStreamRecordersConfig",
        "summary": "Retrieves the list of Stream Recorders for the specified Application Instance"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "default": "_definst_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postStreamRecordersConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StreamRecorderConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StreamRecorderConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/StreamRecorderConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Creates a new Stream Recorder in the specified Application Instance and starts recording"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/streamrecorders/{recorderName}": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "recorderName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "default": "_definst_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamRecorderConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StreamRecorderConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StreamRecorderConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getStreamRecorderConfig",
        "summary": "Retrieves the specifed Stream Recorder"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "recorderName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "default": "_definst_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postStreamRecorderConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StreamRecorderConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StreamRecorderConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/StreamRecorderConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Creates a new Stream Recorder and starts recording"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/streamrecorders/{recorderName}/actions/{action}": {
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The action which should be performed by the server",
            "in": "path",
            "name": "action",
            "required": true,
            "schema": {
              "enum": [
                "splitRecording",
                "stopRecording"
              ],
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the current VHost the action will be performed on",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The application name needed for this REST call",
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The application instance name needed for this REST call",
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "default": "_definst_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The recorder name (stream name) needed for this REST call",
            "in": "path",
            "name": "recorderName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putStreamRecorderAction"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/instances/{instanceName}/streamrecorders/{recorderName}/default": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "recorderName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "default": "_definst_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultStreamRecorderConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultStreamRecorderConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultStreamRecorderConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getDefaultStreamRecorderConfig",
        "summary": "Retrieves a Stream Recorder of the requested name, popluated with the default values"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/modules": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModulesConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ModulesConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ModulesConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getModulesConfig",
        "summary": "Retrieves the list of Modules for the specified Application"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putModulesConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModulesConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ModulesConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ModulesConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the list of Modules for the specified Application"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/monitoring/current": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentApplicationStatistics"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentApplicationStatistics"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentApplicationStatistics"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getCurrentApplicationStatistics",
        "summary": "Retrieves the current Application statistics"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/monitoring/historic": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricApplicationStatistics"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricApplicationStatistics"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricApplicationStatistics"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getHistoricApplicationStatistics",
        "summary": "Retrieves the historic Application statistics"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/publishers": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The vhost name",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublishersAppConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PublishersAppConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PublishersAppConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getPublishersAppConfig",
        "summary": "Retrieves the list of Publishers for the specified Application"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The vhost name",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postPublishersAppConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublisherAppConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PublisherAppConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PublisherAppConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Add a Publisher to list of Publishers for the specified Application"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/publishers/{publisherName}": {
      "delete": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The vhost name",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The publisher name",
            "in": "path",
            "name": "publisherName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "deletePublisherAppConfig",
        "summary": "Deletes the specified Publisher configuration"
      },
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The vhost name",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The publisher name",
            "in": "path",
            "name": "publisherName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublisherAppConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PublisherAppConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PublisherAppConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getPublisherAppConfig",
        "summary": "Retrieves the specified Publisher configuration"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The vhost name",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The publisher name",
            "in": "path",
            "name": "publisherName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postPublisherAppConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublisherAppConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PublisherAppConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PublisherAppConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds the specified Publisher configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The vhost name",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The publisher name",
            "in": "path",
            "name": "publisherName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putPublisherAppConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublisherAppConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PublisherAppConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PublisherAppConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the specified Publisher configuration"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/pushpublish/mapentries": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PushPublishStreamsAppConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PushPublishStreamsAppConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PushPublishStreamsAppConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getPushPublishStreamsAppConfig",
        "summary": "Retrieves the list of PushPublish map entries for the specified Application"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postPushPublishStreamsAppConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushPublishStreamAppConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PushPublishStreamAppConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PushPublishStreamAppConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds a PushPublish map entry to list of PushPublish map entries for the specified Application"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putPushPublishStreamsAppConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushPublishStreamAppConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PushPublishStreamAppConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PushPublishStreamAppConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        }
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/pushpublish/mapentries/{entryName}": {
      "delete": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The entry name needed for this REST call",
            "in": "path",
            "name": "entryName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "deletePushPublishStreamAppConfig",
        "summary": "Deletes the specified PushPublish map entry for the specified Application"
      },
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The entry name needed for this REST call",
            "in": "path",
            "name": "entryName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PushPublishStreamAppConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PushPublishStreamAppConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PushPublishStreamAppConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getPushPublishStreamAppConfig",
        "summary": "Retrieves the specified PushPublish map entry's configuration for the specified Application"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The entry name needed for this REST call",
            "in": "path",
            "name": "entryName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postPushPublishStreamAppConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushPublishStreamAppConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PushPublishStreamAppConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PushPublishStreamAppConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds the specified PushPublish map entry for the specified Application"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The entry name needed for this REST call",
            "in": "path",
            "name": "entryName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putPushPublishStreamAppConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushPublishStreamAppConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PushPublishStreamAppConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PushPublishStreamAppConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the specified PushPublish map entry's configuration for the specified Application"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/pushpublish/mapentries/{entryName}/actions/{action}": {
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The action which should be performed by the server",
            "in": "path",
            "name": "action",
            "required": true,
            "schema": {
              "enum": [
                "copy",
                "disable",
                "enable",
                "restart"
              ],
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The destination entryName when copying ",
            "in": "query",
            "name": "dstEntryName",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the current VHost the action will be performed on",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The application name needed for this REST call",
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The map entry name needed for this REST call",
            "in": "path",
            "name": "entryName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putPushPublishStreamAppAction"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/sdpfiles": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SDPFilesAppConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SDPFilesAppConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SDPFilesAppConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getSDPFilesAppConfig",
        "summary": "Retrieves the list of SDP Files for the specified Application"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/sdpfiles/{sdpfileName}": {
      "delete": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The SDP file name without the extension",
            "in": "path",
            "name": "sdpfileName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "deleteSDPFileAppConfig",
        "summary": "Deletes the specified SDP file"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/sdpfiles/{sdpfileName}/actions/{action}": {
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The action which should be performed by the server",
            "in": "path",
            "name": "action",
            "required": true,
            "schema": {
              "enum": [
                "connect"
              ],
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the application to connect to",
            "in": "query",
            "name": "connectAppName",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the application instance to connect to",
            "in": "query",
            "name": "appInstance",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The MediaCasterType to use for the connection ",
            "in": "query",
            "name": "mediaCasterType",
            "required": true,
            "schema": {
              "default": "rtp",
              "enum": [
                "rtp",
                " rtp-record",
                "shoutcast",
                "shoutcast-record",
                "liverepeater"
              ],
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the current VHost the action will be performed on",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The application name needed for this REST call",
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The sdp file name needed for this REST call",
            "in": "path",
            "name": "sdpfileName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putSDPFileAppAction"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/security": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getSecurityConfig",
        "summary": "Retrieves the Security configuration for the specified Application"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putSecurityConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SecurityConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/SecurityConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the Security configuration for the specified Application"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/smilfiles": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the current VHost the action will be performed on",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The application name needed for this REST call",
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SMILFilesAppConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SMILFilesAppConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SMILFilesAppConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getSMILFilesAppConfig",
        "summary": "Retrieves the list of SMIL Files for the specified Application"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the current VHost the action will be performed on",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The application name needed for this REST call",
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postSMILFilesAppConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SMILFileAppConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SMILFileAppConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/SMILFileAppConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds a SMIL File to the list of SMIL Files for the specified Application"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/smilfiles/{smilfileName}": {
      "delete": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The SMIL file name without the extension",
            "in": "path",
            "name": "smilfileName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "deleteSMILFileAppConfig",
        "summary": "Deletes the specified SMIL File configuration"
      },
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The SMIL file name without the extension",
            "in": "path",
            "name": "smilfileName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SMILFileAppConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SMILFileAppConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SMILFileAppConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getSMILFileAppConfig",
        "summary": "Retrieves the specified SMIL File configuration"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The SMIL file name without the extension",
            "in": "path",
            "name": "smilfileName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postSMILFileAppConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SMILFileAppConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SMILFileAppConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/SMILFileAppConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds the specified SMIL File configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The SMIL file name without the extension",
            "in": "path",
            "name": "smilfileName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putSMILFileAppConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SMILFileAppConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SMILFileAppConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/SMILFileAppConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the specified SMIL File configuration"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/smilfiles/{smilfileName}/actions/{action}": {
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The action which should be performed by the server",
            "in": "path",
            "name": "action",
            "required": true,
            "schema": {
              "enum": [
                "connect",
                "copy"
              ],
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the application to connect to",
            "in": "query",
            "name": "connectAppName",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the application instance to connect to",
            "in": "query",
            "name": "appInstance",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The MediaCasterType to use for the connection ",
            "in": "query",
            "name": "mediaCasterType",
            "required": true,
            "schema": {
              "default": "rtp",
              "enum": [
                "rtp",
                " rtp-record",
                "shoutcast",
                "shoutcast-record",
                "liverepeater"
              ],
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The destination SMIL file name when copying ",
            "in": "query",
            "name": "dstEntryName",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the current VHost the action will be performed on",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The application name needed for this REST call",
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The SMIL file name needed for this REST call",
            "in": "path",
            "name": "smilfileName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putSMILFileAppAction"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/streamconfiguration": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamConfigurationConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StreamConfigurationConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StreamConfigurationConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getStreamConfigurationConfig",
        "summary": "Retrieves the Stream configuration for the specified Application"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putStreamConfigurationConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StreamConfigurationConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StreamConfigurationConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/StreamConfigurationConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the Stream configuration for the specified Application"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/streamfiles": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamFilesAppConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StreamFilesAppConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StreamFilesAppConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getStreamFilesAppConfig",
        "summary": "Retrieves the list of Stream Files for the specified Application"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postStreamFilesAppConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StreamFileAppConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StreamFileAppConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/StreamFileAppConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds a Stream File to the list of Stream Files for the specified Application"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/streamfiles/{streamfileName}": {
      "delete": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The stream file name without the extension",
            "in": "path",
            "name": "streamfileName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "deleteStreamFileAppConfig",
        "summary": "Deletes the specified Stream File configuration"
      },
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The stream file name without the extension",
            "in": "path",
            "name": "streamfileName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamFileAppConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StreamFileAppConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StreamFileAppConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getStreamFileAppConfig",
        "summary": "Retrieves the specified Stream File configuration"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The stream file name without the extension",
            "in": "path",
            "name": "streamfileName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postStreamFileAppConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StreamFileAppConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StreamFileAppConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/StreamFileAppConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds the specified Stream File configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The stream file name without the extension",
            "in": "path",
            "name": "streamfileName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putStreamFileAppConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StreamFileAppConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StreamFileAppConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/StreamFileAppConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the specified Stream File configuration"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/streamfiles/{streamfileName}/actions/{action}": {
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The action which should be performed by the server",
            "in": "path",
            "name": "action",
            "required": true,
            "schema": {
              "enum": [
                "connect",
                "copy"
              ],
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the application to connect to",
            "in": "query",
            "name": "connectAppName",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the application instance to connect to",
            "in": "query",
            "name": "appInstance",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The MediaCasterType to use for the connection ",
            "in": "query",
            "name": "mediaCasterType",
            "required": true,
            "schema": {
              "default": "rtp",
              "enum": [
                "rtp",
                " rtp-record",
                "shoutcast",
                "shoutcast-record",
                "liverepeater"
              ],
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The destination stream file name when copying ",
            "in": "query",
            "name": "dstEntryName",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the current VHost the action will be performed on",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The application name needed for this REST call",
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The stream file, file name needed for this REST call",
            "in": "path",
            "name": "streamfileName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putStreamFileAppAction"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/streamfiles/{streamfileName}/adv": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The stream file name without the .stream extension",
            "in": "path",
            "name": "streamfileName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamFileAppConfigAdv"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StreamFileAppConfigAdv"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StreamFileAppConfigAdv"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getStreamFileAppConfigAdv",
        "summary": "Retrieves the Advanced Stream File configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The stream file name without the .stream extension",
            "in": "path",
            "name": "streamfileName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putStreamFileAppConfigAdv",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StreamFileAppConfigAdv",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/StreamFileAppConfigAdv",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/StreamFileAppConfigAdv",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the Advanced Stream File configuration"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderAppConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderAppConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderAppConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getTranscoderAppConfig",
        "summary": "Retrieves the Transcoder configuration for the specified Application"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putTranscoderAppConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderAppConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderAppConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderAppConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the Transcoder configuration for the specified Application"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/adv": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderAppConfigAdv"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderAppConfigAdv"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderAppConfigAdv"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getTranscoderAppConfigAdv",
        "summary": "Retrieves the Advanced Transcoder configuration for the specified Application"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putTranscoderAppConfigAdv",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderAppConfigAdv",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderAppConfigAdv",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderAppConfigAdv",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the Advanced Transcoder configuration for the specified Application"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the current VHost the action will be performed on",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderTemplatesAppConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderTemplatesAppConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderTemplatesAppConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getTranscoderTemplatesAppConfig",
        "summary": "Retrieves the list of Transcoder Template Configurations for the specified Application"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the current VHost the action will be performed on",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postTranscoderTemplatesAppConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderTemplateAppConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderTemplateAppConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderTemplateAppConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds a Transcoder Templates Configuration to the specified Application"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}": {
      "delete": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "deleteTranscoderTemplateAppConfig",
        "summary": "Deletes the specified Trancoder Template configuration"
      },
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderTemplateAppConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderTemplateAppConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderTemplateAppConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getTranscoderTemplateAppConfig",
        "summary": "Retrieves the specified Trancoder Template configuration"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postTranscoderTemplateAppConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderTemplateAppConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderTemplateAppConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderTemplateAppConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds the specified Trancoder Template configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putTranscoderTemplateAppConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderTemplateAppConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderTemplateAppConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderTemplateAppConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the specified Trancoder Template configuration"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/actions/{action}": {
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The action which should be performed by the server",
            "in": "path",
            "name": "action",
            "required": true,
            "schema": {
              "enum": [
                "copy"
              ],
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The name of the current VHost the action will be performed on",
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The application name needed for this REST call",
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The template name needed for this REST call",
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "description": "The destination transcode template file name when copying ",
            "in": "query",
            "name": "dstEntryName",
            "required": false,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putTranscoderTemplateAppAction"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/adv": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderTemplateAppConfigAdv"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderTemplateAppConfigAdv"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderTemplateAppConfigAdv"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getTranscoderTemplateAppConfigAdv",
        "summary": "Retrieves the Advanced Transcoder Template configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putTranscoderTemplateAppConfigAdv",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderTemplateAppConfigAdv",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderTemplateAppConfigAdv",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderTemplateAppConfigAdv",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the Advanced Transcoder Template configuration"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/decode/overlays/{overlayName}": {
      "delete": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "overlayName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "deleteTranscoderOverlayDecodeAppConfig",
        "summary": "Deletes the specified Trancoder Overlay Decode configuration"
      },
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "overlayName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderOverlayDecodeAppConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderOverlayDecodeAppConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderOverlayDecodeAppConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getTranscoderOverlayDecodeAppConfig",
        "summary": "Retrieves the specified Trancoder Overlay Decode configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "overlayName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putTranscoderOverlayDecodeAppConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderOverlayDecodeAppConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderOverlayDecodeAppConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderOverlayDecodeAppConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the specified Trancoder Overlay Decode configuration"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/encodes": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderEncodesAppConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderEncodesAppConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderEncodesAppConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getTranscoderEncodesAppConfig",
        "summary": "Retrieves the list of Transcoder Encode Configurations for the specified Application"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postTranscoderEncodesAppConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderEncodeAppConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderEncodeAppConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderEncodeAppConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds a Transcoder Encode Configuration to the specified Application"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/encodes/{encodeName}": {
      "delete": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "encodeName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "deleteTranscoderEncodeAppConfig",
        "summary": "Deletes the specified Trancoder Encode configuration"
      },
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "encodeName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderEncodeAppConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderEncodeAppConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderEncodeAppConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getTranscoderEncodeAppConfig",
        "summary": "Retrieves the specified Trancoder Encode configuration"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "encodeName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postTranscoderEncodeAppConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderEncodeAppConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderEncodeAppConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderEncodeAppConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds the specified Trancoder Encode configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "encodeName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putTranscoderEncodeAppConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderEncodeAppConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderEncodeAppConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderEncodeAppConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the specified Trancoder Encode configuration"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/encodes/{encodeName}/adv": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "encodeName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderEncodeAppConfigAdv"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderEncodeAppConfigAdv"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderEncodeAppConfigAdv"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getTranscoderEncodeAppConfigAdv",
        "summary": "Retrieves the Advanced Transcoder Encode configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "encodeName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putTranscoderEncodeAppConfigAdv",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderEncodeAppConfigAdv",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderEncodeAppConfigAdv",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderEncodeAppConfigAdv",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the Advanced Transcoder Encode configuration"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/encodes/{encodeName}/overlays/{overlayName}": {
      "delete": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "overlayName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "encodeName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "deleteTranscoderOverlayEncodeAppConfig",
        "summary": "Deletes the specified Trancoder Overlay Encode configuration"
      },
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "overlayName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "encodeName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderOverlayEncodeAppConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderOverlayEncodeAppConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderOverlayEncodeAppConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getTranscoderOverlayEncodeAppConfig",
        "summary": "Retrieves the specified Trancoder Overlay Encode configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "overlayName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "encodeName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putTranscoderOverlayEncodeAppConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderOverlayEncodeAppConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderOverlayEncodeAppConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderOverlayEncodeAppConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the specified Trancoder Overlay Encode configuration"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/streamnamegroups": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderStreamNameGroupsAppConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderStreamNameGroupsAppConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderStreamNameGroupsAppConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getTranscoderStreamNameGroupsAppConfig",
        "summary": "Retrieves the list of Transcoder Stream Name Groups for the specified Template"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postTranscoderStreamNameGroupsAppConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderStreamNameGroupAppConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderStreamNameGroupAppConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderStreamNameGroupAppConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds a Transcoder Stream Name Groups Configuration to the specified Template"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/transcoder/templates/{templateName}/streamnamegroups/{groupName}": {
      "delete": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "groupName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "deleteTranscoderStreamNameGroupAppConfig",
        "summary": "Deletes the specified Trancoder StreamNameGroup configuration"
      },
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "groupName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderStreamNameGroupAppConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderStreamNameGroupAppConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TranscoderStreamNameGroupAppConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getTranscoderStreamNameGroupAppConfig",
        "summary": "Retrieves the specified Trancoder StreamNameGroup configuration"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "groupName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postTranscoderStreamNameGroupAppConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderStreamNameGroupAppConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderStreamNameGroupAppConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderStreamNameGroupAppConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds the specified Trancoder StreamNameGroup configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "templateName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "groupName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putTranscoderStreamNameGroupAppConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderStreamNameGroupAppConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderStreamNameGroupAppConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TranscoderStreamNameGroupAppConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the specified Trancoder StreamNameGroup configuration"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/webrtc": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebRTCConfig"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebRTCConfig"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebRTCConfig"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 20180816154459 or later.",
        "operationId": "getWebRTCConfig",
        "summary": "Retrieves the WebRTC configuration for the specified Application"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 20180816154459 or later.",
        "operationId": "putWebRTCConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebRTCConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/WebRTCConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/WebRTCConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the WebRTC configuration for the specified Application"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/webrtc/adv": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebRTCConfigAdv"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebRTCConfigAdv"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebRTCConfigAdv"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 20180816154459 or later.",
        "operationId": "getWebRTCConfigAdv",
        "summary": "Retrieves the advanced WebRTC configuration for the specified Application"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 20180816154459 or later.",
        "operationId": "putWebRTCConfigAdv",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebRTCConfigAdv",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/WebRTCConfigAdv",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/WebRTCConfigAdv",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the advanced WebRTC configuration for the specified Application"
      }
    },
    "/v2/servers/{serverName}/vhosts/{vhostName}/applications/{appName}/wscrestproxy": {
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "vhostName",
            "required": true,
            "schema": {
              "default": "_defaultVHost_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 19950 or later.",
        "operationId": "postWSCRESTProxyConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WSCRESTProxyConfig",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/WSCRESTProxyConfig",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/WSCRESTProxyConfig",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Proxies a WSC REST API request"
      }
    },
    "/v3/servers/{serverName}/mediacache": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheConfig3"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheConfig3"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheConfig3"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getMediaCacheConfig3",
        "summary": "Retrieves the server MediaCache configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putMediaCacheConfig3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheConfig3",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheConfig3",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheConfig3",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the server MediaCache configuration"
      }
    },
    "/v3/servers/{serverName}/mediacache/sources": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheSourcesConfig3"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheSourcesConfig3"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheSourcesConfig3"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getMediaCacheSourcesConfig3",
        "summary": "Retrieves the list of MediaCache Sources"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postMediaCacheSourcesConfig3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheSourceConfig3",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheSourceConfig3",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheSourceConfig3",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds the specified MediaCache Source to the list"
      }
    },
    "/v3/servers/{serverName}/mediacache/sources/{sourceName}": {
      "delete": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "sourceName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "deleteMediaCacheSourceConfig3",
        "summary": "Deletes the specified MediaCache Source configuration"
      },
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "sourceName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheSourceConfig3"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheSourceConfig3"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheSourceConfig3"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getMediaCacheSourceConfig3",
        "summary": "Retrieves the specified MediaCache Source configuration"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "sourceName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postMediaCacheSourceConfig3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheSourceConfig3",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheSourceConfig3",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheSourceConfig3",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds the specified MediaCache Source configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "sourceName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putMediaCacheSourceConfig3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheSourceConfig3",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheSourceConfig3",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheSourceConfig3",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the specified MediaCache Source configuration"
      }
    },
    "/v3/servers/{serverName}/mediacache/sources/{sourceName}/adv": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "sourceName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheSourceConfigAdv3"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheSourceConfigAdv3"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheSourceConfigAdv3"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getMediaCacheSourceConfigAdv3",
        "summary": "Retrieves the specified advanced MediaCache Source configuration"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "sourceName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postMediaCacheSourceConfigAdv3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheSourceConfigAdv3",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheSourceConfigAdv3",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheSourceConfigAdv3",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds the specified advanced MediaCache Source configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "sourceName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putMediaCacheSourceConfigAdv3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheSourceConfigAdv3",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheSourceConfigAdv3",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheSourceConfigAdv3",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the specified advanced MediaCache Source configuration"
      }
    },
    "/v3/servers/{serverName}/mediacache/stores": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheStoresConfig3"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheStoresConfig3"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheStoresConfig3"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getMediaCacheStoresConfig3",
        "summary": "Retrieves the list of MediaCache Stores"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postMediaCacheStoresConfig3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheStoreConfig3",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheStoreConfig3",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheStoreConfig3",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds the specified MediaCache Store to the list"
      }
    },
    "/v3/servers/{serverName}/mediacache/stores/{storeName}": {
      "delete": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "storeName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "deleteMediaCacheStoreConfig3",
        "summary": "Deletes the specified MediaCache Store configuration"
      },
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "storeName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheStoreConfig3"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheStoreConfig3"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MediaCacheStoreConfig3"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getMediaCacheStoreConfig3",
        "summary": "Retrieves the specified MediaCache Store configuration"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "storeName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postMediaCacheStoreConfig3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheStoreConfig3",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheStoreConfig3",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheStoreConfig3",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds the specified MediaCache Store configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "storeName",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "putMediaCacheStoreConfig3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheStoreConfig3",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheStoreConfig3",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaCacheStoreConfig3",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Updates the specified MediaCache Store configuration"
      }
    },
    "/v3/servers/{serverName}/publishers": {
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublishersConfig3"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PublishersConfig3"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PublishersConfig3"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "getPublishersConfig3",
        "summary": "Retrieves the list of server Publishers"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 15089 or later.",
        "operationId": "postPublishersConfig3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublisherConfig3",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PublisherConfig3",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PublisherConfig3",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds a new Publisher to the list"
      }
    },
    "/v3/servers/{serverName}/publishers/{publisher}": {
      "delete": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "publisher",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 20064 or later.",
        "operationId": "deletePublisherConfig3",
        "summary": "Deletes the specified Publisher configuration"
      },
      "get": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "publisher",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublisherConfig3"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PublisherConfig3"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PublisherConfig3"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 20064 or later.",
        "operationId": "getPublisherConfig3",
        "summary": "Retrieves the specified Publisher configuration"
      },
      "post": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "publisher",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 20064 or later.",
        "operationId": "postPublisherConfig3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublisherConfig3",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PublisherConfig3",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PublisherConfig3",
                "uniqueItems": false
              }
            }
          },
          "required": true
        },
        "summary": "Adds the specified Publisher configuration"
      },
      "put": {
        "parameters": [
          {
            "description": "Reserved for future use",
            "in": "path",
            "name": "serverName",
            "required": true,
            "schema": {
              "default": "_defaultServer_",
              "type": "string",
              "uniqueItems": false
            }
          },
          {
            "in": "path",
            "name": "publisher",
            "required": true,
            "schema": {
              "type": "string",
              "uniqueItems": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "402": {
            "description": "Payment Required"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        },
        "deprecated": false,
        "description": "This API is available in builds 20064 or later.",
        "operationId": "putPublisherConfig3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublisherConfig3",
                "uniqueItems": false
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PublisherConfig3",
                "uniqueItems": false
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PublisherConfig3",
                "uniqueItems": false
              }
            }
          },
          "required": true
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RESTInfoConfig": {
        "properties": {
          "apiVersion": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "centralConfig": {
            "type": "boolean",
            "uniqueItems": false
          },
          "licenseValid": {
            "type": "boolean",
            "uniqueItems": false
          },
          "restBuild": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "apiVersion",
          "restBuild",
          "centralConfig",
          "properties",
          "licenseValid"
        ],
        "type": "object"
      },
      "CurrentMachineStatistics": {
        "properties": {
          "connectionCount": {
            "$ref": "#/components/schemas/Long",
            "uniqueItems": false
          },
          "cpuIdle": {
            "$ref": "#/components/schemas/Integer",
            "uniqueItems": false
          },
          "cpuSystem": {
            "$ref": "#/components/schemas/Integer",
            "uniqueItems": false
          },
          "cpuUser": {
            "$ref": "#/components/schemas/Integer",
            "uniqueItems": false
          },
          "diskFree": {
            "$ref": "#/components/schemas/Long",
            "uniqueItems": false
          },
          "diskUsed": {
            "$ref": "#/components/schemas/Long",
            "uniqueItems": false
          },
          "heapFree": {
            "$ref": "#/components/schemas/Long",
            "uniqueItems": false
          },
          "heapUsed": {
            "$ref": "#/components/schemas/Long",
            "uniqueItems": false
          },
          "memoryFree": {
            "$ref": "#/components/schemas/Long",
            "uniqueItems": false
          },
          "memoryUsed": {
            "$ref": "#/components/schemas/Long",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "serverUptime": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "serverUptime",
          "cpuIdle",
          "cpuUser",
          "cpuSystem",
          "memoryFree",
          "memoryUsed",
          "heapFree",
          "heapUsed",
          "diskFree",
          "diskUsed",
          "connectionCount"
        ],
        "type": "object"
      },
      "Integer": {},
      "Long": {},
      "HistoricMachineStatistics": {
        "properties": {
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "entries"
        ],
        "type": "object"
      },
      "AdvancedSetting": {
        "properties": {
          "canRemove": {
            "type": "boolean",
            "uniqueItems": false
          },
          "defaultValue": {
            "type": "string",
            "uniqueItems": false
          },
          "documented": {
            "type": "boolean",
            "uniqueItems": false
          },
          "enabled": {
            "type": "boolean",
            "uniqueItems": false
          },
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "section": {
            "type": "string",
            "uniqueItems": false
          },
          "sectionName": {
            "type": "string",
            "uniqueItems": false
          },
          "type": {
            "type": "string",
            "uniqueItems": false
          },
          "value": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "enabled",
          "canRemove",
          "name",
          "value",
          "defaultValue",
          "type",
          "sectionName",
          "section",
          "documented"
        ],
        "type": "object"
      },
      "ServerAction": {
        "properties": {
          "serverName": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "serverName"
        ],
        "type": "object"
      },
      "ServerConfig": {
        "properties": {
          "defaultStreamPrefix": {
            "type": "string",
            "uniqueItems": false
          },
          "description": {
            "type": "string",
            "uniqueItems": false
          },
          "handlerThreadPool": {
            "type": "string",
            "uniqueItems": false
          },
          "handlerThreadPoolAutoValue": {
            "type": "string",
            "uniqueItems": false
          },
          "ipAddress": {
            "type": "string",
            "uniqueItems": false
          },
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "port": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "rtpDataPortSharing": {
            "type": "boolean",
            "uniqueItems": false
          },
          "rtpDataPortSharingPort": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverId1": {
            "type": "string",
            "uniqueItems": false
          },
          "serverId2": {
            "type": "string",
            "uniqueItems": false
          },
          "serverListeners": {
            "$ref": "#/components/schemas/ServerListenersConfig",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "serverTS": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "transportThreadPool": {
            "type": "string",
            "uniqueItems": false
          },
          "transportThreadPoolAutoValue": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "name",
          "description",
          "defaultStreamPrefix",
          "ipAddress",
          "port",
          "handlerThreadPool",
          "handlerThreadPoolAutoValue",
          "transportThreadPool",
          "transportThreadPoolAutoValue",
          "rtpDataPortSharing",
          "rtpDataPortSharingPort",
          "serverListeners",
          "serverId1",
          "serverId2",
          "serverTS"
        ],
        "type": "object"
      },
      "ServerConfigAdv": {
        "properties": {
          "advancedSettings": {
            "items": {
              "$ref": "#/components/schemas/AdvancedSetting",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverListeners": {
            "items": {
              "$ref": "#/components/schemas/ServerListenerConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "advancedSettings",
          "serverListeners"
        ],
        "type": "object"
      },
      "ServerListenerConfig": {
        "properties": {
          "baseClass": {
            "type": "string",
            "uniqueItems": false
          },
          "order": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "order",
          "baseClass"
        ],
        "type": "object"
      },
      "ServerListenersConfig": {
        "properties": {
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverListeners": {
            "items": {
              "$ref": "#/components/schemas/ServerListenerConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "serverListeners"
        ],
        "type": "object"
      },
      "ServerLogFileConfig": {
        "properties": {
          "endDate": {
            "type": "string",
            "uniqueItems": false
          },
          "endOffset": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "fileLength": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "filterStr": {
            "type": "string",
            "uniqueItems": false
          },
          "logDate": {
            "type": "string",
            "uniqueItems": false
          },
          "logFields": {
            "type": "string",
            "uniqueItems": false
          },
          "logLines": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "logSoftware": {
            "type": "string",
            "uniqueItems": false
          },
          "logStartDate": {
            "type": "string",
            "uniqueItems": false
          },
          "logVersion": {
            "type": "string",
            "uniqueItems": false
          },
          "regexSearch": {
            "type": "boolean",
            "uniqueItems": false
          },
          "retLineCount": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "searchStr": {
            "type": "string",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "startDate": {
            "type": "string",
            "uniqueItems": false
          },
          "startOffset": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "retLineCount",
          "startOffset",
          "endOffset",
          "fileLength",
          "filterStr",
          "logFields",
          "logVersion",
          "logStartDate",
          "logSoftware",
          "logDate",
          "logLines",
          "searchStr",
          "regexSearch",
          "startDate",
          "endDate"
        ],
        "type": "object"
      },
      "ServerLogFileDownloadConfig": {
        "properties": {
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName"
        ],
        "type": "object"
      },
      "ServerLogFilesConfig": {
        "properties": {
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverLogFiles": {
            "items": {
              "$ref": "#/components/schemas/ServerLogShortObject",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "serverLogFiles"
        ],
        "type": "object"
      },
      "ServerLogShortObject": {
        "properties": {
          "fileSize": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "href": {
            "type": "string",
            "uniqueItems": false
          },
          "id": {
            "type": "string",
            "uniqueItems": false
          },
          "startDateMS": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          }
        },
        "required": [
          "id",
          "href",
          "fileSize",
          "startDateMS"
        ],
        "type": "object"
      },
      "ServerLogTypesConfig": {
        "properties": {
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverLogType": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "serverLogType"
        ],
        "type": "object"
      },
      "ServerLogsConfig": {
        "properties": {
          "endDate": {
            "type": "string",
            "uniqueItems": false
          },
          "endOffset": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "fileLength": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "filterStr": {
            "type": "string",
            "uniqueItems": false
          },
          "logDate": {
            "type": "string",
            "uniqueItems": false
          },
          "logFields": {
            "type": "string",
            "uniqueItems": false
          },
          "logLines": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "logSoftware": {
            "type": "string",
            "uniqueItems": false
          },
          "logStartDate": {
            "type": "string",
            "uniqueItems": false
          },
          "logVersion": {
            "type": "string",
            "uniqueItems": false
          },
          "regexSearch": {
            "type": "boolean",
            "uniqueItems": false
          },
          "retLineCount": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "searchStr": {
            "type": "string",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "startDate": {
            "type": "string",
            "uniqueItems": false
          },
          "startOffset": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "retLineCount",
          "startOffset",
          "endOffset",
          "fileLength",
          "filterStr",
          "logFields",
          "logVersion",
          "logStartDate",
          "logSoftware",
          "logDate",
          "logLines",
          "searchStr",
          "regexSearch",
          "startDate",
          "endDate"
        ],
        "type": "object"
      },
      "ServersConfig": {
        "properties": {
          "servers": {
            "items": {
              "$ref": "#/components/schemas/ServerConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "servers"
        ],
        "type": "object"
      },
      "SourceDriverNamesList": {
        "properties": {
          "list": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "list"
        ],
        "type": "object"
      },
      "ServerLicensesConfig": {
        "properties": {
          "licenseList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "licenseList"
        ],
        "type": "object"
      },
      "Log4jAction": {
        "properties": {
          "loggerName": {
            "type": "string",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "serverName",
          "loggerName"
        ],
        "type": "object"
      },
      "Log4js": {
        "properties": {
          "loggers": {
            "items": {
              "$ref": "#/components/schemas/WMSLoggerConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "loggers"
        ],
        "type": "object"
      },
      "Log4jsAction": {
        "properties": {
          "serverName": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "serverName"
        ],
        "type": "object"
      },
      "WMSLoggerConfig": {
        "properties": {
          "logLevel": {
            "type": "string",
            "uniqueItems": false
          },
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "name",
          "logLevel"
        ],
        "type": "object"
      },
      "MediaCacheConfig": {
        "properties": {
          "maxPendingReadAheadRequestSize": {
            "type": "string",
            "uniqueItems": false
          },
          "maxPendingReadAheadRequestSizeAutoValue": {
            "type": "string",
            "uniqueItems": false
          },
          "maxPendingWriteRequestSize": {
            "type": "string",
            "uniqueItems": false
          },
          "maxPendingWriteRequestSizeAutoValue": {
            "type": "string",
            "uniqueItems": false
          },
          "readAheadThreadPoolSize": {
            "type": "string",
            "uniqueItems": false
          },
          "readAheadThreadPoolSizeAutoValue": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "sources": {
            "items": {
              "$ref": "#/components/schemas/MediaCacheSourceConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "stores": {
            "items": {
              "$ref": "#/components/schemas/MediaCacheStoreConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          },
          "writerThreadPoolSize": {
            "type": "string",
            "uniqueItems": false
          },
          "writerThreadPoolSizeAutoValue": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "writerThreadPoolSize",
          "writerThreadPoolSizeAutoValue",
          "readAheadThreadPoolSize",
          "readAheadThreadPoolSizeAutoValue",
          "maxPendingWriteRequestSize",
          "maxPendingWriteRequestSizeAutoValue",
          "maxPendingReadAheadRequestSize",
          "maxPendingReadAheadRequestSizeAutoValue",
          "stores",
          "sources"
        ],
        "type": "object"
      },
      "MediaCacheConfigAdv": {
        "properties": {
          "advancedSettings": {
            "items": {
              "$ref": "#/components/schemas/AdvancedSetting",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "advancedSettings"
        ],
        "type": "object"
      },
      "MediaCacheSourceConfig": {
        "properties": {
          "basePath": {
            "type": "string",
            "uniqueItems": false
          },
          "awsAccessKeyId": {
            "type": "string",
            "uniqueItems": false
          },
          "awsSecretAccessKey": {
            "type": "string",
            "uniqueItems": false
          },
          "azureAccountKey": {
            "type": "string",
            "uniqueItems": false
          },
          "azureAccountName": {
            "type": "string",
            "uniqueItems": false
          },
          "azureContainerName": {
            "type": "string",
            "uniqueItems": false
          },
          "baseClass": {
            "type": "string",
            "uniqueItems": false
          },
          "description": {
            "type": "string",
            "uniqueItems": false
          },
          "googleEncMethod": {
            "type": "string",
            "uniqueItems": false
          },
          "googleServiceID": {
            "type": "string",
            "uniqueItems": false
          },
          "googleServiceKey": {
            "type": "string",
            "uniqueItems": false
          },
          "googleServicePrivateKeyFile": {
            "type": "string",
            "uniqueItems": false
          },
          "googleServicePrivateKeyPassword": {
            "type": "string",
            "uniqueItems": false
          },
          "httpReaderFactoryClass": {
            "type": "string",
            "uniqueItems": false
          },
          "isAmazonS3": {
            "type": "boolean",
            "uniqueItems": false
          },
          "isPassThru": {
            "type": "boolean",
            "uniqueItems": false
          },
          "maxTimeToLive": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "minTimeToLive": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "prefix": {
            "type": "string",
            "uniqueItems": false
          },
          "readerClass": {
            "type": "string",
            "uniqueItems": false
          },
          "s3BucketNameInDomain": {
            "type": "boolean",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "type": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "name",
          "type",
          "description",
          "basePath",
          "prefix",
          "minTimeToLive",
          "maxTimeToLive",
          "isAmazonS3",
          "s3BucketNameInDomain",
          "awsAccessKeyId",
          "awsSecretAccessKey",
          "isPassThru",
          "baseClass",
          "readerClass",
          "httpReaderFactoryClass",
          "azureAccountName",
          "azureContainerName",
          "azureAccountKey",
          "googleServiceID",
          "googleServiceKey",
          "googleServicePrivateKeyFile",
          "googleServicePrivateKeyPassword",
          "googleEncMethod"
        ],
        "type": "object"
      },
      "MediaCacheSourceConfigAdv": {
        "properties": {
          "advancedSettings": {
            "items": {
              "$ref": "#/components/schemas/AdvancedSetting",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "advancedSettings"
        ],
        "type": "object"
      },
      "MediaCacheSourcesConfig": {
        "properties": {
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "sources": {
            "items": {
              "$ref": "#/components/schemas/ShortObject",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "sources"
        ],
        "type": "object"
      },
      "MediaCacheStoreConfig": {
        "properties": {
          "description": {
            "type": "string",
            "uniqueItems": false
          },
          "maxSize": {
            "type": "string",
            "uniqueItems": false
          },
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "path": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          },
          "writeRate": {
            "type": "string",
            "uniqueItems": false
          },
          "writeRateMaxBucketSize": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "name",
          "description",
          "path",
          "maxSize",
          "writeRate",
          "writeRateMaxBucketSize"
        ],
        "type": "object"
      },
      "MediaCacheStoreConfigAdv": {
        "properties": {
          "advancedSettings": {
            "items": {
              "$ref": "#/components/schemas/AdvancedSetting",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "advancedSettings"
        ],
        "type": "object"
      },
      "MediaCacheStoresConfig": {
        "properties": {
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "stores": {
            "items": {
              "$ref": "#/components/schemas/ShortObject",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "stores"
        ],
        "type": "object"
      },
      "ShortObject": {
        "properties": {
          "href": {
            "type": "string",
            "uniqueItems": false
          },
          "id": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "id",
          "href"
        ],
        "type": "object"
      },
      "MediaCasterConfig": {
        "properties": {
          "baseClass": {
            "type": "string",
            "uniqueItems": false
          },
          "connectionTimeout": {
            "type": "string",
            "uniqueItems": false
          },
          "description": {
            "type": "string",
            "uniqueItems": false
          },
          "keepAliveTime": {
            "type": "string",
            "uniqueItems": false
          },
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "streamType": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "name",
          "description",
          "streamType",
          "baseClass",
          "connectionTimeout",
          "keepAliveTime"
        ],
        "type": "object"
      },
      "MediaCastersConfig": {
        "properties": {
          "mediaCasters": {
            "items": {
              "$ref": "#/components/schemas/MediaCasterConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "mediaCasters"
        ],
        "type": "object"
      },
      "HistoricServerStatistics": {
        "properties": {
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "entries"
        ],
        "type": "object"
      },
      "MonitoringConfig": {
        "properties": {
          "databaseDebugEnable": {
            "type": "boolean",
            "uniqueItems": false
          },
          "debugEnable": {
            "type": "boolean",
            "uniqueItems": false
          },
          "enable": {
            "type": "boolean",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "enable",
          "debugEnable",
          "databaseDebugEnable"
        ],
        "type": "object"
      },
      "PublisherConfig": {
        "properties": {
          "description": {
            "type": "string",
            "uniqueItems": false
          },
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "password": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "name",
          "description",
          "password"
        ],
        "type": "object"
      },
      "PublishersConfig": {
        "properties": {
          "publishers": {
            "items": {
              "$ref": "#/components/schemas/PublisherConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "publishers"
        ],
        "type": "object"
      },
      "ServerStatusConfig": {
        "properties": {
          "availableMemory": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "currentConnections": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "drmApplications": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "drmInUse": {
            "type": "boolean",
            "uniqueItems": false
          },
          "drmLicensed": {
            "type": "boolean",
            "uniqueItems": false
          },
          "dvrApplications": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "dvrInUse": {
            "type": "boolean",
            "uniqueItems": false
          },
          "dvrLicensed": {
            "type": "boolean",
            "uniqueItems": false
          },
          "gpuAcceleration": {
            "type": "string",
            "uniqueItems": false
          },
          "httpOriginAvailable": {
            "type": "boolean",
            "uniqueItems": false
          },
          "javaBitness": {
            "type": "string",
            "uniqueItems": false
          },
          "javaHome": {
            "type": "string",
            "uniqueItems": false
          },
          "javaMaxHeapSize": {
            "type": "string",
            "uniqueItems": false
          },
          "javaName": {
            "type": "string",
            "uniqueItems": false
          },
          "javaVMVersion": {
            "type": "string",
            "uniqueItems": false
          },
          "javaVendor": {
            "type": "string",
            "uniqueItems": false
          },
          "javaVersion": {
            "type": "string",
            "uniqueItems": false
          },
          "licenseExpireDate": {
            "type": "string",
            "uniqueItems": false
          },
          "licenseType": {
            "type": "string",
            "uniqueItems": false
          },
          "maxConnections": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "maxIncommingStreams": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "nativeBase": {
            "type": "string",
            "uniqueItems": false
          },
          "osArchitecture": {
            "type": "string",
            "uniqueItems": false
          },
          "osBitness": {
            "type": "string",
            "uniqueItems": false
          },
          "osName": {
            "type": "string",
            "uniqueItems": false
          },
          "osVersion": {
            "type": "string",
            "uniqueItems": false
          },
          "processorCores": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "restAPIAvailable": {
            "type": "boolean",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverBuild": {
            "type": "string",
            "uniqueItems": false
          },
          "serverMode": {
            "type": "string",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "serverVersion": {
            "type": "string",
            "uniqueItems": false
          },
          "timeRunning": {
            "format": "double",
            "type": "number",
            "uniqueItems": false
          },
          "totalMemory": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "transcoderApplications": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "transcoderAvailable": {
            "type": "boolean",
            "uniqueItems": false
          },
          "transcoderLicensed": {
            "type": "boolean",
            "uniqueItems": false
          },
          "transcoderLicenses": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "transcoderLicensesInUse": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "transcoderWatermark": {
            "type": "boolean",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          },
          "wseName": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "wseName",
          "serverVersion",
          "serverBuild",
          "licenseType",
          "licenseExpireDate",
          "serverMode",
          "osName",
          "osVersion",
          "osArchitecture",
          "osBitness",
          "totalMemory",
          "availableMemory",
          "processorCores",
          "gpuAcceleration",
          "javaVersion",
          "javaVMVersion",
          "javaBitness",
          "javaName",
          "javaVendor",
          "javaHome",
          "javaMaxHeapSize",
          "timeRunning",
          "currentConnections",
          "maxConnections",
          "maxIncommingStreams",
          "restAPIAvailable",
          "httpOriginAvailable",
          "transcoderLicensed",
          "transcoderAvailable",
          "transcoderWatermark",
          "transcoderLicenses",
          "transcoderLicensesInUse",
          "transcoderApplications",
          "dvrLicensed",
          "dvrInUse",
          "dvrApplications",
          "drmLicensed",
          "drmInUse",
          "drmApplications",
          "nativeBase"
        ],
        "type": "object"
      },
      "TranscoderConfig": {
        "properties": {
          "available": {
            "type": "boolean",
            "uniqueItems": false
          },
          "licensed": {
            "type": "boolean",
            "uniqueItems": false
          },
          "licenses": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "licensesInUse": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "available",
          "licensed",
          "licenses",
          "licensesInUse"
        ],
        "type": "object"
      },
      "ServerTuneConfig": {
        "properties": {
          "garbageCollector": {
            "type": "string",
            "uniqueItems": false
          },
          "garbageCollectorCurrent": {
            "type": "string",
            "uniqueItems": false
          },
          "heapSize": {
            "type": "string",
            "uniqueItems": false
          },
          "heapSizeCurrent": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "heapSize",
          "heapSizeCurrent",
          "garbageCollector",
          "garbageCollectorCurrent"
        ],
        "type": "object"
      },
      "UserConfig": {
        "properties": {
          "description": {
            "type": "string",
            "uniqueItems": false
          },
          "groups": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "password": {
            "type": "string",
            "uniqueItems": false
          },
          "passwordEncoding": {
            "type": "string",
            "uniqueItems": false
          },
          "realm": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "userName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "userName",
          "description",
          "groups",
          "password",
          "passwordEncoding",
          "realm"
        ],
        "type": "object"
      },
      "UsersConfig": {
        "properties": {
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "users": {
            "items": {
              "$ref": "#/components/schemas/UserConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "users"
        ],
        "type": "object"
      },
      "AppShortObject": {
        "properties": {
          "appType": {
            "type": "string",
            "uniqueItems": false
          },
          "drmEnabled": {
            "type": "boolean",
            "uniqueItems": false
          },
          "dvrEnabled": {
            "type": "boolean",
            "uniqueItems": false
          },
          "href": {
            "type": "string",
            "uniqueItems": false
          },
          "id": {
            "type": "string",
            "uniqueItems": false
          },
          "streamTargetsEnabled": {
            "type": "boolean",
            "uniqueItems": false
          },
          "transcoderEnabled": {
            "type": "boolean",
            "uniqueItems": false
          }
        },
        "required": [
          "id",
          "href",
          "appType",
          "dvrEnabled",
          "drmEnabled",
          "transcoderEnabled",
          "streamTargetsEnabled"
        ],
        "type": "object"
      },
      "ApplicationsConfig": {
        "properties": {
          "applications": {
            "items": {
              "$ref": "#/components/schemas/AppShortObject",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "applications"
        ],
        "type": "object"
      },
      "Boolean": {},
      "CurrentVHostStatistics": {
        "properties": {
          "bytesIn": {
            "$ref": "#/components/schemas/Long",
            "uniqueItems": false
          },
          "bytesOut": {
            "$ref": "#/components/schemas/Long",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "totalConnections": {
            "$ref": "#/components/schemas/Long",
            "uniqueItems": false
          },
          "uptime": {
            "$ref": "#/components/schemas/Long",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "uptime",
          "bytesIn",
          "bytesOut",
          "totalConnections",
          "connectionCount"
        ],
        "type": "object"
      },
      "HTTPProviderConfig": {
        "properties": {
          "authenticationMethod": {
            "type": "string",
            "uniqueItems": false
          },
          "baseClass": {
            "type": "string",
            "uniqueItems": false
          },
          "requestFilters": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "baseClass",
          "requestFilters",
          "authenticationMethod"
        ],
        "type": "object"
      },
      "HistoricVHostStatistics": {
        "properties": {
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "entries"
        ],
        "type": "object"
      },
      "HostPortConfig": {
        "properties": {
          "HTTPProviders": {
            "items": {
              "$ref": "#/components/schemas/HTTPProviderConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "ipAddress": {
            "type": "string",
            "uniqueItems": false
          },
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "port": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "ssl": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "sslAlgorithm": {
            "type": "string",
            "uniqueItems": false
          },
          "sslDomainToKeyStoreMapPath": {
            "type": "string",
            "uniqueItems": false
          },
          "sslDomains": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "sslEnable": {
            "type": "boolean",
            "uniqueItems": false
          },
          "sslKeyStorePassword": {
            "type": "string",
            "uniqueItems": false
          },
          "sslKeyStorePath": {
            "type": "string",
            "uniqueItems": false
          },
          "sslKeyStoreType": {
            "type": "string",
            "uniqueItems": false
          },
          "sslProtocol": {
            "type": "string",
            "uniqueItems": false
          },
          "sslProtocols": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "type": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          },
          "webRtcEnable": {
            "$ref": "#/components/schemas/Boolean",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "name",
          "type",
          "port",
          "ipAddress",
          "sslEnable",
          "sslKeyStorePath",
          "sslKeyStorePassword",
          "sslKeyStoreType",
          "sslDomainToKeyStoreMapPath",
          "sslProtocol",
          "sslAlgorithm",
          "ssl",
          "sslProtocols",
          "sslDomains",
          "webRtcEnable",
          "HTTPProviders"
        ],
        "type": "object"
      },
      "HostPortConfigAdv": {
        "properties": {
          "advancedSettings": {
            "items": {
              "$ref": "#/components/schemas/AdvancedSetting",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "ipAddress": {
            "type": "string",
            "uniqueItems": false
          },
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "port": {
            "type": "string",
            "uniqueItems": false
          },
          "processorCount": {
            "type": "string",
            "uniqueItems": false
          },
          "processorCountAutoValue": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "type": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "advancedSettings",
          "name",
          "type",
          "ipAddress",
          "port",
          "processorCount",
          "processorCountAutoValue"
        ],
        "type": "object"
      },
      "HostPortsConfig": {
        "properties": {
          "hostports": {
            "items": {
              "$ref": "#/components/schemas/ShortObject",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "hostports"
        ],
        "type": "object"
      },
      "HostportsTuneConfig": {
        "properties": {
          "hostports": {
            "items": {
              "$ref": "#/components/schemas/HostPortConfigAdv",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "name",
          "hostports"
        ],
        "type": "object"
      },
      "IMediaCacheItemSummary": {
        "properties": {
          "placeholder": {
            "description": "This is a placeholder for the unknown IMediaCacheItemSummary model",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MediaCacheStoreAction": {
        "properties": {
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "vhostName": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "serverName",
          "vhostName"
        ],
        "type": "object"
      },
      "MediaCacheStoreList": {
        "properties": {
          "mediacacheitemlist": {
            "items": {
              "$ref": "#/components/schemas/IMediaCacheItemSummary",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "mediacacheitemlist"
        ],
        "type": "object"
      },
      "MpegTSFilter": {
        "properties": {
          "mpegtsAudioPID": {
            "type": "string",
            "uniqueItems": false
          },
          "mpegtsProgramID": {
            "type": "string",
            "uniqueItems": false
          },
          "mpegtsVideoPID": {
            "type": "string",
            "uniqueItems": false
          },
          "name": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "name",
          "mpegtsProgramID",
          "mpegtsVideoPID",
          "mpegtsAudioPID"
        ],
        "type": "object"
      },
      "PublisherVhostConfig": {
        "properties": {
          "description": {
            "type": "string",
            "uniqueItems": false
          },
          "password": {
            "type": "string",
            "uniqueItems": false
          },
          "publisherName": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "publisherName",
          "description",
          "password"
        ],
        "type": "object"
      },
      "PublishersVhostConfig": {
        "properties": {
          "publishers": {
            "items": {
              "$ref": "#/components/schemas/PublisherVhostConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "publishers"
        ],
        "type": "object"
      },
      "SDPFileAction": {
        "properties": {
          "sdpfileName": {
            "type": "string",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "vhostName": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "serverName",
          "vhostName",
          "sdpfileName"
        ],
        "type": "object"
      },
      "SDPFileConfig": {
        "properties": {
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "uri": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "name",
          "uri"
        ],
        "type": "object"
      },
      "SDPFilesConfig": {
        "properties": {
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "sdpFiles": {
            "items": {
              "$ref": "#/components/schemas/ShortObject",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "sdpFiles"
        ],
        "type": "object"
      },
      "SMILFileAction": {
        "properties": {
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "smilfileName": {
            "type": "string",
            "uniqueItems": false
          },
          "vhostName": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "serverName",
          "vhostName",
          "smilfileName"
        ],
        "type": "object"
      },
      "SMILFileConfig": {
        "properties": {
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "smilStreams": {
            "items": {
              "$ref": "#/components/schemas/SMILFileStreamConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "title": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "name",
          "title",
          "smilStreams"
        ],
        "type": "object"
      },
      "SMILFileStreamConfig": {
        "properties": {
          "audioBitrate": {
            "type": "string",
            "uniqueItems": false
          },
          "audioCodecId": {
            "type": "string",
            "uniqueItems": false
          },
          "audioOnly": {
            "type": "string",
            "uniqueItems": false
          },
          "begin": {
            "type": "string",
            "uniqueItems": false
          },
          "dur": {
            "type": "string",
            "uniqueItems": false
          },
          "height": {
            "type": "string",
            "uniqueItems": false
          },
          "idx": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "isWowzaCaptionStream": {
            "type": "string",
            "uniqueItems": false
          },
          "keyFrameOnly": {
            "type": "string",
            "uniqueItems": false
          },
          "ngrp": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "src": {
            "type": "string",
            "uniqueItems": false
          },
          "systemBitrate": {
            "type": "string",
            "uniqueItems": false
          },
          "systemLanguage": {
            "type": "string",
            "uniqueItems": false
          },
          "type": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          },
          "videoBitrate": {
            "type": "string",
            "uniqueItems": false
          },
          "videoCodecId": {
            "type": "string",
            "uniqueItems": false
          },
          "videoOnly": {
            "type": "string",
            "uniqueItems": false
          },
          "width": {
            "type": "string",
            "uniqueItems": false
          },
          "wowzaCaptionIngestType": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "idx",
          "type",
          "src",
          "systemLanguage",
          "systemBitrate",
          "width",
          "height",
          "begin",
          "dur",
          "videoBitrate",
          "videoCodecId",
          "videoOnly",
          "ngrp",
          "audioBitrate",
          "audioCodecId",
          "audioOnly",
          "keyFrameOnly",
          "isWowzaCaptionStream",
          "wowzaCaptionIngestType"
        ],
        "type": "object"
      },
      "SMILFilesConfig": {
        "properties": {
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "smilFiles": {
            "items": {
              "$ref": "#/components/schemas/ShortObject",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          },
          "vhostName": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "vhostName",
          "smilFiles"
        ],
        "type": "object"
      },
      "SSLConfig": {
        "properties": {
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "sslAlgorithm": {
            "type": "string",
            "uniqueItems": false
          },
          "sslCipherSuites": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "sslDomainToKeyStoreMapPath": {
            "type": "string",
            "uniqueItems": false
          },
          "sslEnable": {
            "type": "boolean",
            "uniqueItems": false
          },
          "sslKeyStorePassword": {
            "type": "string",
            "uniqueItems": false
          },
          "sslKeyStorePath": {
            "type": "string",
            "uniqueItems": false
          },
          "sslKeyStoreType": {
            "type": "string",
            "uniqueItems": false
          },
          "sslProtocol": {
            "type": "string",
            "uniqueItems": false
          },
          "sslProtocols": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "sslEnable",
          "sslKeyStorePath",
          "sslKeyStorePassword",
          "sslKeyStoreType",
          "sslDomainToKeyStoreMapPath",
          "sslProtocol",
          "sslAlgorithm",
          "sslCipherSuites",
          "sslProtocols"
        ],
        "type": "object"
      },
      "StartupStreamConfig": {
        "properties": {
          "appName": {
            "type": "string",
            "uniqueItems": false
          },
          "instance": {
            "type": "string",
            "uniqueItems": false
          },
          "mediaCasterType": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "streamName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "streamName",
          "appName",
          "instance",
          "mediaCasterType"
        ],
        "type": "object"
      },
      "StartupStreamsConfig": {
        "properties": {
          "Streams": {
            "items": {
              "$ref": "#/components/schemas/StartupStreamConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "Streams"
        ],
        "type": "object"
      },
      "StreamFileAction": {
        "properties": {
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "streamfileName": {
            "type": "string",
            "uniqueItems": false
          },
          "vhostName": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "serverName",
          "vhostName",
          "streamfileName"
        ],
        "type": "object"
      },
      "StreamFileConfig": {
        "properties": {
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "sourceControlDriver": {
            "type": "string",
            "uniqueItems": false
          },
          "sourceControlPassword": {
            "type": "string",
            "uniqueItems": false
          },
          "sourceControlUserName": {
            "type": "string",
            "uniqueItems": false
          },
          "uri": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "name",
          "uri",
          "sourceControlUserName",
          "sourceControlPassword",
          "sourceControlDriver"
        ],
        "type": "object"
      },
      "StreamFileConfigAdv": {
        "properties": {
          "advancedSettings": {
            "items": {
              "$ref": "#/components/schemas/AdvancedSetting",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "mpegTSFilters": {
            "items": {
              "$ref": "#/components/schemas/MpegTSFilter",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "sourceControlDriver": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "advancedSettings",
          "sourceControlDriver"
        ],
        "type": "object"
      },
      "StreamFilesConfig": {
        "properties": {
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "streamFiles": {
            "items": {
              "$ref": "#/components/schemas/ShortObject",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "streamFiles"
        ],
        "type": "object"
      },
      "TestPlaybackInfoConfig": {
        "properties": {
          "applications": {
            "$ref": "#/components/schemas/ApplicationsConfig",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "testPlayers",
          "applications",
          "instances"
        ],
        "type": "object"
      },
      "TranscoderConfig1": {
        "properties": {
          "available": {
            "type": "boolean",
            "uniqueItems": false
          },
          "licensed": {
            "type": "boolean",
            "uniqueItems": false
          },
          "licenses": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "licensesInUse": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "templates": {
            "$ref": "#/components/schemas/TranscoderTemplatesConfig",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "available",
          "licensed",
          "licenses",
          "licensesInUse",
          "templates"
        ],
        "type": "object"
      },
      "TranscoderEncodeConfig": {
        "properties": {
          "Overlays": {
            "items": {
              "$ref": "#/components/schemas/TranscoderOverlayEncodeConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "audioBitrate": {
            "type": "string",
            "uniqueItems": false
          },
          "audioCodec": {
            "type": "string",
            "uniqueItems": false
          },
          "crop": {
            "type": "string",
            "uniqueItems": false
          },
          "description": {
            "type": "string",
            "uniqueItems": false
          },
          "enable": {
            "type": "boolean",
            "uniqueItems": false
          },
          "fitMode": {
            "type": "string",
            "uniqueItems": false
          },
          "followSource": {
            "type": "boolean",
            "uniqueItems": false
          },
          "gpuid": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "height": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "implementation": {
            "type": "string",
            "uniqueItems": false
          },
          "interval": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "profile": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "sourceRectangle": {
            "type": "string",
            "uniqueItems": false
          },
          "streamName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          },
          "videoBitrate": {
            "type": "string",
            "uniqueItems": false
          },
          "videoCodec": {
            "type": "string",
            "uniqueItems": false
          },
          "width": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "name",
          "enable",
          "description",
          "streamName",
          "videoCodec",
          "implementation",
          "gpuid",
          "profile",
          "videoBitrate",
          "followSource",
          "interval",
          "fitMode",
          "width",
          "height",
          "crop",
          "sourceRectangle",
          "audioCodec",
          "audioBitrate",
          "Overlays"
        ],
        "type": "object"
      },
      "TranscoderEncodeConfigAdv": {
        "properties": {
          "advancedSettings": {
            "items": {
              "$ref": "#/components/schemas/AdvancedSetting",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "advancedSettings",
          "name"
        ],
        "type": "object"
      },
      "TranscoderEncodesConfig": {
        "properties": {
          "encodes": {
            "items": {
              "$ref": "#/components/schemas/ShortObject",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "encodes"
        ],
        "type": "object"
      },
      "TranscoderMemberConfig": {
        "properties": {
          "encodeName": {
            "type": "string",
            "uniqueItems": false
          },
          "memberName": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          },
          "wowzaAudioOnly": {
            "type": "boolean",
            "uniqueItems": false
          },
          "wowzaVideoOnly": {
            "type": "boolean",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "memberName",
          "encodeName",
          "wowzaVideoOnly",
          "wowzaAudioOnly"
        ],
        "type": "object"
      },
      "TranscoderOverlayDecodeConfig": {
        "properties": {
          "align": {
            "type": "string",
            "uniqueItems": false
          },
          "checkForUpdates": {
            "type": "boolean",
            "uniqueItems": false
          },
          "description": {
            "type": "string",
            "uniqueItems": false
          },
          "enable": {
            "type": "boolean",
            "uniqueItems": false
          },
          "height": {
            "type": "string",
            "uniqueItems": false
          },
          "imagePath": {
            "type": "string",
            "uniqueItems": false
          },
          "index": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "opacity": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "overlayName": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          },
          "width": {
            "type": "string",
            "uniqueItems": false
          },
          "x": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "y": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "overlayName",
          "description",
          "enable",
          "imagePath",
          "index",
          "checkForUpdates",
          "opacity",
          "x",
          "y",
          "width",
          "height",
          "align"
        ],
        "type": "object"
      },
      "TranscoderOverlayEncodeConfig": {
        "properties": {
          "align": {
            "type": "string",
            "uniqueItems": false
          },
          "checkForUpdates": {
            "type": "boolean",
            "uniqueItems": false
          },
          "description": {
            "type": "string",
            "uniqueItems": false
          },
          "enable": {
            "type": "boolean",
            "uniqueItems": false
          },
          "height": {
            "type": "string",
            "uniqueItems": false
          },
          "imagePath": {
            "type": "string",
            "uniqueItems": false
          },
          "index": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "opacity": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "overlayName": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          },
          "width": {
            "type": "string",
            "uniqueItems": false
          },
          "x": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "y": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "overlayName",
          "description",
          "enable",
          "imagePath",
          "index",
          "checkForUpdates",
          "opacity",
          "x",
          "y",
          "width",
          "height",
          "align",
          "name"
        ],
        "type": "object"
      },
      "TranscoderStreamNameGroupConfig": {
        "properties": {
          "Members": {
            "items": {
              "$ref": "#/components/schemas/TranscoderMemberConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "description": {
            "type": "string",
            "uniqueItems": false
          },
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "streamName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "name",
          "description",
          "streamName",
          "Members"
        ],
        "type": "object"
      },
      "TranscoderStreamNameGroupsConfig": {
        "properties": {
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "streamNameGroups": {
            "items": {
              "$ref": "#/components/schemas/ShortObject",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "streamNameGroups"
        ],
        "type": "object"
      },
      "TranscoderTemplateAction": {
        "properties": {
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "templateName": {
            "type": "string",
            "uniqueItems": false
          },
          "vhostName": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "serverName",
          "vhostName",
          "templateName"
        ],
        "type": "object"
      },
      "TranscoderTemplateConfig": {
        "properties": {
          "deinterlace": {
            "type": "boolean",
            "uniqueItems": false
          },
          "description": {
            "type": "string",
            "uniqueItems": false
          },
          "encodes": {
            "items": {
              "$ref": "#/components/schemas/TranscoderEncodeConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "implementation": {
            "type": "string",
            "uniqueItems": false
          },
          "implementationScale": {
            "type": "string",
            "uniqueItems": false
          },
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "overlays": {
            "items": {
              "$ref": "#/components/schemas/TranscoderOverlayDecodeConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "streamNameGroups": {
            "items": {
              "$ref": "#/components/schemas/TranscoderStreamNameGroupConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "name",
          "description",
          "implementation",
          "implementationScale",
          "deinterlace",
          "encodes",
          "streamNameGroups",
          "overlays"
        ],
        "type": "object"
      },
      "TranscoderTemplateConfigAdv": {
        "properties": {
          "advancedSettings": {
            "items": {
              "$ref": "#/components/schemas/AdvancedSetting",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "advancedSettings",
          "name"
        ],
        "type": "object"
      },
      "TranscoderTemplatesConfig": {
        "properties": {
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "templates": {
            "items": {
              "$ref": "#/components/schemas/ShortObject",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          },
          "vhostName": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "vhostName",
          "templates"
        ],
        "type": "object"
      },
      "VHostAction": {
        "properties": {
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "vhostName": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "serverName",
          "vhostName"
        ],
        "type": "object"
      },
      "VHostConfig": {
        "properties": {
          "HostPorts": {
            "items": {
              "$ref": "#/components/schemas/HostPortConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "configurationDir": {
            "type": "string",
            "uniqueItems": false
          },
          "connectionLimit": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "description": {
            "type": "string",
            "uniqueItems": false
          },
          "maximumConcurrentTranscodes": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "running": {
            "type": "boolean",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "securityPublishValidEncoders": {
            "type": "string",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "testPlayerIPAddress": {
            "type": "string",
            "uniqueItems": false
          },
          "testPlayerPort": {
            "type": "string",
            "uniqueItems": false
          },
          "testPlayerSSLEnable": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "name",
          "description",
          "running",
          "configurationDir",
          "connectionLimit",
          "testPlayerIPAddress",
          "testPlayerPort",
          "testPlayerSSLEnable",
          "maximumConcurrentTranscodes",
          "securityPublishValidEncoders",
          "HostPorts"
        ],
        "type": "object"
      },
      "VHostConfigAdv": {
        "properties": {
          "advancedSettings": {
            "items": {
              "$ref": "#/components/schemas/AdvancedSetting",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "advancedSettings"
        ],
        "type": "object"
      },
      "VHostShortObject": {
        "properties": {
          "connectingIPAddress": {
            "type": "string",
            "uniqueItems": false
          },
          "connectingPort": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "connectingSSLEnable": {
            "type": "boolean",
            "uniqueItems": false
          },
          "href": {
            "type": "string",
            "uniqueItems": false
          },
          "id": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "id",
          "href",
          "connectingIPAddress",
          "connectingPort",
          "connectingSSLEnable"
        ],
        "type": "object"
      },
      "VHostTuneConfig": {
        "properties": {
          "clientIdleFrequency": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "handlerThreadPoolSize": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "idleWorkerCount": {
            "type": "string",
            "uniqueItems": false
          },
          "idleWorkerCountAutoValue": {
            "type": "string",
            "uniqueItems": false
          },
          "mediaCasterProcessorCount": {
            "type": "string",
            "uniqueItems": false
          },
          "mediaCasterProcessorCountAutoValue": {
            "type": "string",
            "uniqueItems": false
          },
          "multicastIncomingProcessorCount": {
            "type": "string",
            "uniqueItems": false
          },
          "multicastIncomingProcessorCountAutoValue": {
            "type": "string",
            "uniqueItems": false
          },
          "multicastOutgoingProcessorCount": {
            "type": "string",
            "uniqueItems": false
          },
          "multicastOutgoingProcessorCountAutoValue": {
            "type": "string",
            "uniqueItems": false
          },
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "netConnectionsProcessorCount": {
            "type": "string",
            "uniqueItems": false
          },
          "netConnectionsProcessorCountAutoValue": {
            "type": "string",
            "uniqueItems": false
          },
          "rtpIdleFrequency": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "transportThreadPoolSize": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "unicastIncomingProcessorCount": {
            "type": "string",
            "uniqueItems": false
          },
          "unicastIncomingProcessorCountAutoValue": {
            "type": "string",
            "uniqueItems": false
          },
          "unicastOutgoingProcessorCount": {
            "type": "string",
            "uniqueItems": false
          },
          "unicastOutgoingProcessorCountAutoValue": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "name",
          "netConnectionsProcessorCount",
          "netConnectionsProcessorCountAutoValue",
          "mediaCasterProcessorCount",
          "mediaCasterProcessorCountAutoValue",
          "idleWorkerCount",
          "idleWorkerCountAutoValue",
          "unicastIncomingProcessorCount",
          "unicastIncomingProcessorCountAutoValue",
          "unicastOutgoingProcessorCount",
          "unicastOutgoingProcessorCountAutoValue",
          "multicastIncomingProcessorCount",
          "multicastIncomingProcessorCountAutoValue",
          "multicastOutgoingProcessorCount",
          "multicastOutgoingProcessorCountAutoValue",
          "clientIdleFrequency",
          "rtpIdleFrequency",
          "handlerThreadPoolSize",
          "transportThreadPoolSize"
        ],
        "type": "object"
      },
      "VHostsConfig": {
        "properties": {
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          },
          "vhosts": {
            "items": {
              "$ref": "#/components/schemas/VHostShortObject",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "vhosts"
        ],
        "type": "object"
      },
      "ApplicationAction": {
        "properties": {
          "appName": {
            "type": "string",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "vhostName": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "serverName",
          "vhostName",
          "appName"
        ],
        "type": "object"
      },
      "ApplicationConfig": {
        "properties": {
          "appType": {
            "type": "string",
            "uniqueItems": false
          },
          "applicationTimeout": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "avSyncMethod": {
            "type": "string",
            "uniqueItems": false
          },
          "captionLiveIngestType": {
            "type": "string",
            "uniqueItems": false
          },
          "clientStreamReadAccess": {
            "type": "string",
            "uniqueItems": false
          },
          "clientStreamWriteAccess": {
            "type": "string",
            "uniqueItems": false
          },
          "description": {
            "type": "string",
            "uniqueItems": false
          },
          "drmConfig": {
            "$ref": "#/components/schemas/DRMConfig",
            "uniqueItems": false
          },
          "dvrConfig": {
            "$ref": "#/components/schemas/DVRConfig",
            "uniqueItems": false
          },
          "httpCORSHeadersEnabled": {
            "type": "boolean",
            "uniqueItems": false
          },
          "httpOptimizeFileReads": {
            "type": "boolean",
            "uniqueItems": false
          },
          "httpStreamers": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "maxRTCPWaitTime": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "mediaCacheSourceList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "mediaReaderBufferSeekIO": {
            "type": "boolean",
            "uniqueItems": false
          },
          "mediaReaderRandomAccessReaderClass": {
            "type": "string",
            "uniqueItems": false
          },
          "modules": {
            "$ref": "#/components/schemas/ModulesConfig",
            "uniqueItems": false
          },
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "pingTimeout": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "repeaterOriginURL": {
            "type": "string",
            "uniqueItems": false
          },
          "repeaterQueryString": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "securityConfig": {
            "$ref": "#/components/schemas/SecurityConfig",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "streamConfig": {
            "$ref": "#/components/schemas/StreamConfigurationConfig",
            "uniqueItems": false
          },
          "transcoderConfig": {
            "$ref": "#/components/schemas/TranscoderAppConfig",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          },
          "vodTimedTextProviders": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "webRTCConfig": {
            "$ref": "#/components/schemas/WebRTCConfig",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "name",
          "appType",
          "description",
          "applicationTimeout",
          "pingTimeout",
          "repeaterOriginURL",
          "repeaterQueryString",
          "clientStreamReadAccess",
          "clientStreamWriteAccess",
          "avSyncMethod",
          "maxRTCPWaitTime",
          "httpCORSHeadersEnabled",
          "httpStreamers",
          "mediaCacheSourceList",
          "mediaReaderRandomAccessReaderClass",
          "httpOptimizeFileReads",
          "mediaReaderBufferSeekIO",
          "captionLiveIngestType",
          "vodTimedTextProviders",
          "securityConfig",
          "streamConfig",
          "dvrConfig",
          "drmConfig",
          "transcoderConfig",
          "webRTCConfig",
          "modules"
        ],
        "type": "object"
      },
      "ApplicationConfigAdv": {
        "properties": {
          "advancedSettings": {
            "items": {
              "$ref": "#/components/schemas/AdvancedSetting",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "modules": {
            "items": {
              "$ref": "#/components/schemas/ModuleConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "advancedSettings",
          "modules"
        ],
        "type": "object"
      },
      "BuyDRMStreamMapConfig": {
        "properties": {
          "contentID": {
            "type": "string",
            "uniqueItems": false
          },
          "keyID": {
            "type": "string",
            "uniqueItems": false
          },
          "mediaID": {
            "type": "string",
            "uniqueItems": false
          },
          "order": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "streamName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "streamName",
          "order",
          "keyID",
          "contentID",
          "mediaID"
        ],
        "type": "object"
      },
      "BuyDRMStreamMapsConfig": {
        "properties": {
          "buyDRMStreamMaps": {
            "items": {
              "$ref": "#/components/schemas/BuyDRMStreamMapConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "buyDRMStreamNameMapFile": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "buyDRMStreamNameMapFile",
          "buyDRMStreamMaps"
        ],
        "type": "object"
      },
      "CurrentApplicationStatistics": {
        "properties": {
          "bytesIn": {
            "$ref": "#/components/schemas/Long",
            "uniqueItems": false
          },
          "bytesInRate": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "bytesOut": {
            "$ref": "#/components/schemas/Long",
            "uniqueItems": false
          },
          "bytesOutRate": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "totalConnections": {
            "$ref": "#/components/schemas/Long",
            "uniqueItems": false
          },
          "uptime": {
            "$ref": "#/components/schemas/Long",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "uptime",
          "bytesIn",
          "bytesOut",
          "bytesInRate",
          "bytesOutRate",
          "totalConnections",
          "connectionCount"
        ],
        "type": "object"
      },
      "CurrentIncomingStreamStatistics": {
        "properties": {
          "applicationInstance": {
            "type": "string",
            "uniqueItems": false
          },
          "bytesIn": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "bytesInRate": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "bytesOut": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "bytesOutRate": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "totalConnections": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "uptime": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "applicationInstance",
          "name",
          "uptime",
          "bytesIn",
          "bytesOut",
          "bytesInRate",
          "bytesOutRate",
          "totalConnections",
          "connectionCount"
        ],
        "type": "object"
      },
      "DRMConfig": {
        "properties": {
          "buyDRMProtectCupertinoStreaming": {
            "type": "boolean",
            "uniqueItems": false
          },
          "buyDRMProtectMpegDashStreaming": {
            "type": "boolean",
            "uniqueItems": false
          },
          "buyDRMProtectSmoothStreaming": {
            "type": "boolean",
            "uniqueItems": false
          },
          "buyDRMStreamMaps": {
            "$ref": "#/components/schemas/BuyDRMStreamMapsConfig",
            "uniqueItems": false
          },
          "buyDRMUserKey": {
            "type": "string",
            "uniqueItems": false
          },
          "cupertinoEncryptionAPIBased": {
            "type": "boolean",
            "uniqueItems": false
          },
          "ezDRMPassword": {
            "type": "string",
            "uniqueItems": false
          },
          "ezDRMUsername": {
            "type": "string",
            "uniqueItems": false
          },
          "inUse": {
            "type": "boolean",
            "uniqueItems": false
          },
          "licenseType": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "verimatrixCupertinoKeyServerIpAddress": {
            "type": "string",
            "uniqueItems": false
          },
          "verimatrixCupertinoKeyServerPort": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "verimatrixCupertinoVODPerSessionKeys": {
            "type": "boolean",
            "uniqueItems": false
          },
          "verimatrixProtectCupertinoStreaming": {
            "type": "boolean",
            "uniqueItems": false
          },
          "verimatrixProtectSmoothStreaming": {
            "type": "boolean",
            "uniqueItems": false
          },
          "verimatrixSmoothKeyServerIpAddress": {
            "type": "string",
            "uniqueItems": false
          },
          "verimatrixSmoothKeyServerPort": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "verimatrixStreamMaps": {
            "$ref": "#/components/schemas/VerimatrixStreamMapsConfig",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "licenseType",
          "inUse",
          "ezDRMUsername",
          "ezDRMPassword",
          "buyDRMUserKey",
          "buyDRMProtectSmoothStreaming",
          "buyDRMProtectCupertinoStreaming",
          "buyDRMProtectMpegDashStreaming",
          "verimatrixProtectCupertinoStreaming",
          "verimatrixCupertinoKeyServerIpAddress",
          "verimatrixCupertinoKeyServerPort",
          "verimatrixCupertinoVODPerSessionKeys",
          "verimatrixProtectSmoothStreaming",
          "verimatrixSmoothKeyServerIpAddress",
          "verimatrixSmoothKeyServerPort",
          "cupertinoEncryptionAPIBased",
          "buyDRMStreamMaps",
          "verimatrixStreamMaps"
        ],
        "type": "object"
      },
      "DRMConfigAdv": {
        "properties": {
          "advancedSettings": {
            "items": {
              "$ref": "#/components/schemas/AdvancedSetting",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "advancedSettings"
        ],
        "type": "object"
      },
      "DVRConfig": {
        "properties": {
          "archiveStrategy": {
            "type": "string",
            "uniqueItems": false
          },
          "dvrEnable": {
            "type": "boolean",
            "uniqueItems": false
          },
          "dvrEncryptionSharedSecret": {
            "type": "string",
            "uniqueItems": false
          },
          "dvrMediaCacheEnabled": {
            "type": "boolean",
            "uniqueItems": false
          },
          "dvrOnlyStreaming": {
            "type": "boolean",
            "uniqueItems": false
          },
          "httpRandomizeMediaName": {
            "type": "boolean",
            "uniqueItems": false
          },
          "inUse": {
            "type": "boolean",
            "uniqueItems": false
          },
          "licenseType": {
            "type": "string",
            "uniqueItems": false
          },
          "recorders": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "startRecordingOnStartup": {
            "type": "boolean",
            "uniqueItems": false
          },
          "storageDir": {
            "type": "string",
            "uniqueItems": false
          },
          "store": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          },
          "windowDuration": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "licenseType",
          "inUse",
          "dvrEnable",
          "recorders",
          "store",
          "windowDuration",
          "storageDir",
          "archiveStrategy",
          "dvrOnlyStreaming",
          "startRecordingOnStartup",
          "dvrEncryptionSharedSecret",
          "dvrMediaCacheEnabled",
          "httpRandomizeMediaName"
        ],
        "type": "object"
      },
      "DVRConfigAdv": {
        "properties": {
          "advancedSettings": {
            "items": {
              "$ref": "#/components/schemas/AdvancedSetting",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "advancedSettings"
        ],
        "type": "object"
      },
      "DefaultStreamRecorderConfig": {
        "properties": {
          "applicationName": {
            "type": "string",
            "uniqueItems": false
          },
          "backBufferTime": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "baseFile": {
            "type": "string",
            "uniqueItems": false
          },
          "currentDuration": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "currentFile": {
            "type": "string",
            "uniqueItems": false
          },
          "currentSize": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "defaultAudioSearchPosition": {
            "type": "boolean",
            "uniqueItems": false
          },
          "defaultRecorder": {
            "type": "boolean",
            "uniqueItems": false
          },
          "fileFormat": {
            "type": "string",
            "uniqueItems": false
          },
          "fileTemplate": {
            "type": "string",
            "uniqueItems": false
          },
          "fileVersionDelegateName": {
            "type": "string",
            "uniqueItems": false
          },
          "instanceName": {
            "type": "string",
            "uniqueItems": false
          },
          "moveFirstVideoFrameToZero": {
            "type": "boolean",
            "uniqueItems": false
          },
          "option": {
            "type": "string",
            "uniqueItems": false
          },
          "outputPath": {
            "type": "string",
            "uniqueItems": false
          },
          "recordData": {
            "type": "boolean",
            "uniqueItems": false
          },
          "recorderErrorString": {
            "type": "string",
            "uniqueItems": false
          },
          "recorderName": {
            "type": "string",
            "uniqueItems": false
          },
          "recorderState": {
            "type": "string",
            "uniqueItems": false
          },
          "recordingStartTime": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "segmentDuration": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "segmentSchedule": {
            "type": "string",
            "uniqueItems": false
          },
          "segmentSize": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "segmentationType": {
            "type": "string",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "skipKeyFrameUntilAudioTimeout": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "splitOnTcDiscontinuity": {
            "type": "boolean",
            "uniqueItems": false
          },
          "startOnKeyFrame": {
            "type": "boolean",
            "uniqueItems": false
          },
          "timeScale": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "recorderName",
          "instanceName",
          "applicationName",
          "recorderState",
          "recorderErrorString",
          "defaultRecorder",
          "segmentationType",
          "outputPath",
          "baseFile",
          "fileFormat",
          "fileVersionDelegateName",
          "fileTemplate",
          "segmentDuration",
          "segmentSize",
          "segmentSchedule",
          "recordData",
          "startOnKeyFrame",
          "splitOnTcDiscontinuity",
          "backBufferTime",
          "option",
          "moveFirstVideoFrameToZero",
          "currentSize",
          "currentDuration",
          "currentFile",
          "recordingStartTime",
          "timeScale",
          "defaultAudioSearchPosition",
          "skipKeyFrameUntilAudioTimeout"
        ],
        "type": "object"
      },
      "DvrRESTConverterStore": {
        "properties": {
          "DvrConverterStore": {
            "$ref": "#/components/schemas/IDvrConverterStore",
            "uniqueItems": false
          },
          "dvrStoreName": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "dvrStoreName",
          "DvrConverterStore"
        ],
        "type": "object"
      },
      "DvrRESTConverterStoreAction": {
        "properties": {
          "appName": {
            "type": "string",
            "uniqueItems": false
          },
          "dvrStoreName": {
            "type": "string",
            "uniqueItems": false
          },
          "instanceName": {
            "type": "string",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "vhostName": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "serverName",
          "vhostName",
          "appName",
          "instanceName",
          "dvrStoreName"
        ],
        "type": "object"
      },
      "DvrRESTConverterStores": {
        "properties": {
          "dvrconverterstoresummary": {
            "items": {
              "$ref": "#/components/schemas/IDvrConverterStoreSummary",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "groupConversionStatusList": {
            "items": {
              "$ref": "#/components/schemas/IDvrConverterGroupStatus",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "dvrconverterstoresummary",
          "groupConversionStatusList"
        ],
        "type": "object"
      },
      "DvrRESTConverterStoresAction": {
        "properties": {
          "appName": {
            "type": "string",
            "uniqueItems": false
          },
          "instanceName": {
            "type": "string",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "vhostName": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "serverName",
          "vhostName",
          "appName",
          "instanceName",
          "dvrsonverterstore"
        ],
        "type": "object"
      },
      "HistoricApplicationStatistics": {
        "properties": {
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "entries"
        ],
        "type": "object"
      },
      "IDvrConverterGroupStatus": {
        "properties": {
          "placeholder": {
            "description": "This is a placeholder for the unknown IDvrConverterGroupStatus model",
            "type": "string"
          }
        },
        "type": "object"
      },
      "IDvrConverterStore": {
        "properties": {
          "placeholder": {
            "description": "This is a placeholder for the unknown IDvrConverterStore model",
            "type": "string"
          }
        },
        "type": "object"
      },
      "IDvrConverterStoreSummary": {
        "properties": {
          "placeholder": {
            "description": "This is a placeholder for the unknown IDvrConverterStoreSummary model",
            "type": "string"
          }
        },
        "type": "object"
      },
      "IncomingStreamAction": {
        "properties": {
          "appName": {
            "type": "string",
            "uniqueItems": false
          },
          "instanceName": {
            "type": "string",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "streamName": {
            "type": "string",
            "uniqueItems": false
          },
          "vhostName": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "serverName",
          "vhostName",
          "appName",
          "instanceName",
          "streamName"
        ],
        "type": "object"
      },
      "IncomingStreamConfig": {
        "properties": {
          "applicationInstance": {
            "type": "string",
            "uniqueItems": false
          },
          "isConnected": {
            "type": "boolean",
            "uniqueItems": false
          },
          "isPTZEnabled": {
            "type": "boolean",
            "uniqueItems": false
          },
          "isPublishedToVOD": {
            "type": "boolean",
            "uniqueItems": false
          },
          "isRecordingSet": {
            "type": "boolean",
            "uniqueItems": false
          },
          "isStreamManagerStream": {
            "type": "boolean",
            "uniqueItems": false
          },
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "ptzPollingInterval": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "ptzPollingIntervalMinimum": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "sourceIp": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "applicationInstance",
          "name",
          "sourceIp",
          "isRecordingSet",
          "isStreamManagerStream",
          "isPublishedToVOD",
          "isConnected",
          "isPTZEnabled",
          "ptzPollingInterval",
          "ptzPollingIntervalMinimum"
        ],
        "type": "object"
      },
      "InstanceAction": {
        "properties": {
          "appName": {
            "type": "string",
            "uniqueItems": false
          },
          "instanceName": {
            "type": "string",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "vhostName": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "serverName",
          "vhostName",
          "appName",
          "instanceName"
        ],
        "type": "object"
      },
      "InstanceConfig": {
        "properties": {
          "incomingStreams": {
            "items": {
              "$ref": "#/components/schemas/IncomingStreamConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "outgoingStreams": {
            "items": {
              "$ref": "#/components/schemas/OutgoingStreamConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "recorders": {
            "items": {
              "$ref": "#/components/schemas/StreamRecorderConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "streamGroups": {
            "items": {
              "$ref": "#/components/schemas/StreamGroupConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "name",
          "incomingStreams",
          "outgoingStreams",
          "recorders",
          "streamGroups"
        ],
        "type": "object"
      },
      "InstancesConfig": {
        "properties": {
          "instanceList": {
            "items": {
              "$ref": "#/components/schemas/InstanceConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "instanceList"
        ],
        "type": "object"
      },
      "LiveEncoderConfig": {
        "properties": {
          "output": {
            "$ref": "#/components/schemas/Output",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "source": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "output",
          "source"
        ],
        "type": "object"
      },
      "MediaCacheApplicationStoreAction": {
        "properties": {
          "appName": {
            "type": "string",
            "uniqueItems": false
          },
          "instanceName": {
            "type": "string",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "vhostName": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "serverName",
          "vhostName",
          "appName",
          "instanceName"
        ],
        "type": "object"
      },
      "ModuleConfig": {
        "properties": {
          "class": {
            "type": "string",
            "uniqueItems": false
          },
          "description": {
            "type": "string",
            "uniqueItems": false
          },
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "order": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "order",
          "name",
          "description",
          "class"
        ],
        "type": "object"
      },
      "ModulesConfig": {
        "properties": {
          "moduleList": {
            "items": {
              "$ref": "#/components/schemas/ModuleConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "moduleList"
        ],
        "type": "object"
      },
      "OutgoingStreamConfig": {
        "properties": {
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "someProp": {
            "type": "string",
            "uniqueItems": false
          },
          "someProp2": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "name",
          "someProp",
          "someProp2"
        ],
        "type": "object"
      },
      "Output": {
        "properties": {
          "rtmp": {
            "$ref": "#/components/schemas/RTMP",
            "uniqueItems": false
          },
          "video": {
            "$ref": "#/components/schemas/VideoSettings",
            "uniqueItems": false
          }
        },
        "required": [
          "rtmp",
          "video"
        ],
        "type": "object"
      },
      "PublisherAppConfig": {
        "properties": {
          "description": {
            "type": "string",
            "uniqueItems": false
          },
          "password": {
            "type": "string",
            "uniqueItems": false
          },
          "publisherName": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "publisherName",
          "description",
          "password"
        ],
        "type": "object"
      },
      "PublishersAppConfig": {
        "properties": {
          "publishers": {
            "items": {
              "$ref": "#/components/schemas/PublisherVhostConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "publishers"
        ],
        "type": "object"
      },
      "PushPublishStreamAppAction": {
        "properties": {
          "appName": {
            "type": "string",
            "uniqueItems": false
          },
          "entryName": {
            "type": "string",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "vhostName": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "serverName",
          "vhostName",
          "appName",
          "entryName"
        ],
        "type": "object"
      },
      "PushPublishStreamAppConfig": {
        "properties": {
          "host": {
            "type": "string",
            "uniqueItems": false
          },
          "adaptiveGroup": {
            "type": "string",
            "uniqueItems": false
          },
          "adaptiveGroups": {
            "type": "string",
            "uniqueItems": false
          },
          "adaptiveStreaming": {
            "type": "boolean",
            "uniqueItems": false
          },
          "akamai.destinationServer": {
            "type": "string",
            "uniqueItems": false
          },
          "akamai.eventName": {
            "type": "string",
            "uniqueItems": false
          },
          "akamai.hdNetwork": {
            "type": "boolean",
            "uniqueItems": false
          },
          "akamai.hostId": {
            "type": "string",
            "uniqueItems": false
          },
          "akamai.sendToBackupServer": {
            "type": "boolean",
            "uniqueItems": false
          },
          "akamai.streamId": {
            "type": "string",
            "uniqueItems": false
          },
          "appInstance": {
            "type": "string",
            "uniqueItems": false
          },
          "application": {
            "type": "string",
            "uniqueItems": false
          },
          "audioPort": {
            "type": "string",
            "uniqueItems": false
          },
          "autoStartTranscoder": {
            "type": "boolean",
            "uniqueItems": false
          },
          "childProfile": {
            "type": "string",
            "uniqueItems": false
          },
          "connectionCode": {
            "type": "string",
            "uniqueItems": false
          },
          "connectionFlashVersion": {
            "type": "string",
            "uniqueItems": false
          },
          "cupertino.renditions": {
            "type": "string",
            "uniqueItems": false
          },
          "debugLog": {
            "type": "boolean",
            "uniqueItems": false
          },
          "debugLogChildren": {
            "type": "boolean",
            "uniqueItems": false
          },
          "debugPackets": {
            "type": "boolean",
            "uniqueItems": false
          },
          "destinationServer": {
            "type": "string",
            "uniqueItems": false
          },
          "enabled": {
            "type": "boolean",
            "uniqueItems": false
          },
          "entryName": {
            "type": "string",
            "uniqueItems": false
          },
          "facebook.360Projection": {
            "type": "string",
            "uniqueItems": false
          },
          "facebook.accessToken": {
            "type": "string",
            "uniqueItems": false
          },
          "facebook.continuousLive": {
            "type": "boolean",
            "uniqueItems": false
          },
          "facebook.description": {
            "type": "string",
            "uniqueItems": false
          },
          "facebook.destId": {
            "type": "string",
            "uniqueItems": false
          },
          "facebook.destName": {
            "type": "string",
            "uniqueItems": false
          },
          "facebook.destType": {
            "type": "string",
            "uniqueItems": false
          },
          "facebook.privacy": {
            "type": "string",
            "uniqueItems": false
          },
          "facebook.title": {
            "type": "string",
            "uniqueItems": false
          },
          "facebook.useAppSecret": {
            "type": "boolean",
            "uniqueItems": false
          },
          "facebook.userName": {
            "type": "string",
            "uniqueItems": false
          },
          "group.name": {
            "type": "string",
            "uniqueItems": false
          },
          "group.streamMatcher": {
            "type": "string",
            "uniqueItems": false
          },
          "http.fakePosts": {
            "type": "boolean",
            "uniqueItems": false
          },
          "http.playlistAcrossSessions": {
            "type": "boolean",
            "uniqueItems": false
          },
          "http.playlistCount": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "http.playlistTimeout": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "http.writerDebug": {
            "type": "boolean",
            "uniqueItems": false
          },
          "icecast2.aim": {
            "type": "string",
            "uniqueItems": false
          },
          "icecast2.description": {
            "type": "string",
            "uniqueItems": false
          },
          "icecast2.destination": {
            "type": "string",
            "uniqueItems": false
          },
          "icecast2.genre": {
            "type": "string",
            "uniqueItems": false
          },
          "icecast2.icq": {
            "type": "string",
            "uniqueItems": false
          },
          "icecast2.irc": {
            "type": "string",
            "uniqueItems": false
          },
          "icecast2.metaname": {
            "type": "string",
            "uniqueItems": false
          },
          "icecast2.name": {
            "type": "string",
            "uniqueItems": false
          },
          "icecast2.public": {
            "type": "boolean",
            "uniqueItems": false
          },
          "icecast2.url": {
            "type": "string",
            "uniqueItems": false
          },
          "localBindAddress": {
            "type": "string",
            "uniqueItems": false
          },
          "mpegdash.audioRepresentationId": {
            "type": "string",
            "uniqueItems": false
          },
          "mpegdash.videoRepresentationId": {
            "type": "string",
            "uniqueItems": false
          },
          "originalTimecodeThreshold": {
            "type": "string",
            "uniqueItems": false
          },
          "password": {
            "type": "string",
            "uniqueItems": false
          },
          "playbackHost": {
            "type": "string",
            "uniqueItems": false
          },
          "port": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "profile": {
            "type": "string",
            "uniqueItems": false
          },
          "queryString": {
            "type": "string",
            "uniqueItems": false
          },
          "removeDefaultAppInstance": {
            "type": "boolean",
            "uniqueItems": false
          },
          "rtpWrap": {
            "type": "boolean",
            "uniqueItems": false
          },
          "sanjose.representationId": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "secureTokenSharedSecret": {
            "type": "string",
            "uniqueItems": false
          },
          "sendFCPublish": {
            "type": "boolean",
            "uniqueItems": false
          },
          "sendOriginalTimecodes": {
            "type": "boolean",
            "uniqueItems": false
          },
          "sendReleaseStream": {
            "type": "boolean",
            "uniqueItems": false
          },
          "sendSSL": {
            "type": "boolean",
            "uniqueItems": false
          },
          "sendStreamCloseCommands": {
            "type": "boolean",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "sessionStatus": {
            "type": "string",
            "uniqueItems": false
          },
          "shoutcast.aim": {
            "type": "string",
            "uniqueItems": false
          },
          "shoutcast.destination": {
            "type": "string",
            "uniqueItems": false
          },
          "shoutcast.genre": {
            "type": "string",
            "uniqueItems": false
          },
          "shoutcast.icq": {
            "type": "string",
            "uniqueItems": false
          },
          "shoutcast.irc": {
            "type": "string",
            "uniqueItems": false
          },
          "shoutcast.metaname": {
            "type": "string",
            "uniqueItems": false
          },
          "shoutcast.name": {
            "type": "string",
            "uniqueItems": false
          },
          "shoutcast.public": {
            "type": "boolean",
            "uniqueItems": false
          },
          "shoutcast.url": {
            "type": "string",
            "uniqueItems": false
          },
          "sourceStreamName": {
            "type": "string",
            "uniqueItems": false
          },
          "srtConnectTimeout": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "srtFlightFlagSize": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "srtInputBandwidth": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "srtKeyAnnounce": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "srtKeyLength": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "srtKeyRefreshRate": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "srtLatency": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "srtMaximumBandwidth": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "srtMaximumSegmentSize": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "srtMinimumVersion": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "srtOverheadBandwidth": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "srtPassPhrase": {
            "type": "string",
            "uniqueItems": false
          },
          "srtPeerIdleTimeout": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "srtSendBufferSize": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "srtSendBufferSizeUDP": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "srtStreamId": {
            "type": "string",
            "uniqueItems": false
          },
          "srtTimesToPrintStats": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "srtTimestampBasedDeliveryMode": {
            "type": "boolean",
            "uniqueItems": false
          },
          "srtTooLatePacketDrop": {
            "type": "boolean",
            "uniqueItems": false
          },
          "streamName": {
            "type": "string",
            "uniqueItems": false
          },
          "streamWaitTimeout": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "timeToLive": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "userName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          },
          "videoPort": {
            "type": "string",
            "uniqueItems": false
          },
          "wowzaCloud.accountAccessKey": {
            "type": "string",
            "uniqueItems": false
          },
          "wowzaCloud.accountApiKey": {
            "type": "string",
            "uniqueItems": false
          },
          "wowzaCloud.accountId": {
            "type": "string",
            "uniqueItems": false
          },
          "wowzaCloud.accountName": {
            "type": "string",
            "uniqueItems": false
          },
          "wowzaCloud.adaptiveStreaming": {
            "type": "boolean",
            "uniqueItems": false
          },
          "wowzaCloud.playbackUrl": {
            "type": "string",
            "uniqueItems": false
          },
          "wowzaCloud.targetId": {
            "type": "string",
            "uniqueItems": false
          },
          "wowzaVideo.liveStreamEmbedCode": {
            "type": "string",
            "uniqueItems": false
          },
          "wowzaVideo.liveStreamId": {
            "type": "string",
            "uniqueItems": false
          },
          "wowzaVideo.liveStreamPlayerUrl": {
            "type": "string",
            "uniqueItems": false
          },
          "wowzaVideo.playbackUrl": {
            "type": "string",
            "uniqueItems": false
          },
          "wowzaVideo.region": {
            "type": "string",
            "uniqueItems": false
          },
          "wowzaVideo.streamTargetId": {
            "type": "string",
            "uniqueItems": false
          },
          "wowzaVideoTranscoder.height": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "wowzaVideoTranscoder.region": {
            "type": "string",
            "uniqueItems": false
          },
          "wowzaVideoTranscoder.width": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "entryName",
          "sessionStatus",
          "enabled",
          "autoStartTranscoder",
          "sourceStreamName",
          "profile",
          "streamName",
          "application",
          "appInstance",
          "host",
          "playbackHost",
          "port",
          "userName",
          "password",
          "secureTokenSharedSecret",
          "adaptiveStreaming",
          "sendFCPublish",
          "sendReleaseStream",
          "sendStreamCloseCommands",
          "removeDefaultAppInstance",
          "sendOriginalTimecodes",
          "originalTimecodeThreshold",
          "connectionFlashVersion",
          "queryString",
          "localBindAddress",
          "akamai.hdNetwork",
          "akamai.streamId",
          "akamai.sendToBackupServer",
          "akamai.hostId",
          "akamai.eventName",
          "akamai.destinationServer",
          "destinationServer",
          "adaptiveGroups",
          "adaptiveGroup",
          "cupertino.renditions",
          "sanjose.representationId",
          "mpegdash.videoRepresentationId",
          "mpegdash.audioRepresentationId",
          "http.playlistCount",
          "http.playlistAcrossSessions",
          "http.playlistTimeout",
          "http.fakePosts",
          "http.writerDebug",
          "videoPort",
          "audioPort",
          "streamWaitTimeout",
          "timeToLive",
          "rtpWrap",
          "shoutcast.name",
          "shoutcast.destination",
          "shoutcast.url",
          "shoutcast.metaname",
          "shoutcast.genre",
          "shoutcast.aim",
          "shoutcast.irc",
          "shoutcast.icq",
          "shoutcast.public",
          "icecast2.name",
          "icecast2.destination",
          "icecast2.description",
          "icecast2.url",
          "icecast2.metaname",
          "icecast2.genre",
          "icecast2.aim",
          "icecast2.irc",
          "icecast2.icq",
          "icecast2.public",
          "srtPassPhrase",
          "srtKeyLength",
          "srtLatency",
          "srtTooLatePacketDrop",
          "srtTimestampBasedDeliveryMode",
          "srtSendBufferSize",
          "srtSendBufferSizeUDP",
          "srtMaximumSegmentSize",
          "srtFlightFlagSize",
          "srtMaximumBandwidth",
          "srtInputBandwidth",
          "srtOverheadBandwidth",
          "srtConnectTimeout",
          "srtMinimumVersion",
          "srtStreamId",
          "srtKeyRefreshRate",
          "srtKeyAnnounce",
          "srtPeerIdleTimeout",
          "srtTimesToPrintStats",
          "connectionCode",
          "debugLogChildren",
          "debugLog",
          "debugPackets",
          "sendSSL",
          "facebook.userName",
          "facebook.useAppSecret",
          "facebook.accessToken",
          "facebook.title",
          "facebook.description",
          "facebook.privacy",
          "facebook.destId",
          "facebook.destType",
          "facebook.destName",
          "facebook.continuousLive",
          "facebook.360Projection",
          "wowzaCloud.accountName",
          "wowzaCloud.accountId",
          "wowzaCloud.accountApiKey",
          "wowzaCloud.accountAccessKey",
          "wowzaCloud.targetId",
          "wowzaCloud.playbackUrl",
          "wowzaVideo.playbackUrl",
          "wowzaVideo.streamTargetId",
          "wowzaVideo.region",
          "wowzaVideoTranscoder.region",
          "wowzaVideo.liveStreamEmbedCode",
          "wowzaVideo.liveStreamPlayerUrl",
          "wowzaVideo.liveStreamId",
          "wowzaVideoTranscoder.width",
          "wowzaVideoTranscoder.height",
          "wowzaCloud.adaptiveStreaming",
          "childProfile",
          "group.streamMatcher",
          "group.name",
          "extraOptions"
        ],
        "type": "object"
      },
      "PushPublishStreamsAppConfig": {
        "properties": {
          "mapEntries": {
            "items": {
              "$ref": "#/components/schemas/PushPublishStreamAppConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "mapEntries"
        ],
        "type": "object"
      },
      "RTMP": {
        "properties": {
          "backup_url": {
            "type": "string",
            "uniqueItems": false
          },
          "password": {
            "type": "string",
            "uniqueItems": false
          },
          "stream": {
            "type": "string",
            "uniqueItems": false
          },
          "url": {
            "type": "string",
            "uniqueItems": false
          },
          "username": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "url",
          "backup_url",
          "stream",
          "username",
          "password"
        ],
        "type": "object"
      },
      "SDPFileAppAction": {
        "properties": {
          "appName": {
            "type": "string",
            "uniqueItems": false
          },
          "sdpfileName": {
            "type": "string",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "vhostName": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "serverName",
          "vhostName",
          "appName",
          "sdpfileName"
        ],
        "type": "object"
      },
      "SDPFileAppConfig": {
        "properties": {
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "uri": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "name",
          "uri"
        ],
        "type": "object"
      },
      "SDPFilesAppConfig": {
        "properties": {
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "sdpFiles": {
            "items": {
              "$ref": "#/components/schemas/ShortObject",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "sdpFiles"
        ],
        "type": "object"
      },
      "SMILFileAppAction": {
        "properties": {
          "appName": {
            "type": "string",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "smilfileName": {
            "type": "string",
            "uniqueItems": false
          },
          "vhostName": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "serverName",
          "vhostName",
          "appName",
          "smilfileName"
        ],
        "type": "object"
      },
      "SMILFileAppConfig": {
        "properties": {
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "smilStreams": {
            "items": {
              "$ref": "#/components/schemas/SMILFileStreamConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "title": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "name",
          "title",
          "smilStreams"
        ],
        "type": "object"
      },
      "SMILFilesAppConfig": {
        "properties": {
          "appName": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "smilFiles": {
            "items": {
              "$ref": "#/components/schemas/ShortObject",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          },
          "vhostName": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "vhostName",
          "smilFiles",
          "appName"
        ],
        "type": "object"
      },
      "SecurityConfig": {
        "properties": {
          "clientStreamWriteAccess": {
            "type": "string",
            "uniqueItems": false
          },
          "playAuthenticationMethod": {
            "type": "string",
            "uniqueItems": false
          },
          "playIPBlackList": {
            "type": "string",
            "uniqueItems": false
          },
          "playIPWhiteList": {
            "type": "string",
            "uniqueItems": false
          },
          "playMaximumConnections": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "playRequireSecureConnection": {
            "type": "boolean",
            "uniqueItems": false
          },
          "publishAuthenticationMethod": {
            "type": "string",
            "uniqueItems": false
          },
          "publishBlockDuplicateStreamNames": {
            "type": "boolean",
            "uniqueItems": false
          },
          "publishIPBlackList": {
            "type": "string",
            "uniqueItems": false
          },
          "publishIPWhiteList": {
            "type": "string",
            "uniqueItems": false
          },
          "publishPasswordFile": {
            "type": "string",
            "uniqueItems": false
          },
          "publishRTMPSecureURL": {
            "type": "string",
            "uniqueItems": false
          },
          "publishRequirePassword": {
            "type": "boolean",
            "uniqueItems": false
          },
          "publishValidEncoders": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "secureTokenHashAlgorithm": {
            "type": "string",
            "uniqueItems": false
          },
          "secureTokenIncludeClientIPInHash": {
            "type": "boolean",
            "uniqueItems": false
          },
          "secureTokenOriginSharedSecret": {
            "type": "string",
            "uniqueItems": false
          },
          "secureTokenQueryParametersPrefix": {
            "type": "string",
            "uniqueItems": false
          },
          "secureTokenSharedSecret": {
            "type": "string",
            "uniqueItems": false
          },
          "secureTokenUseTEAForRTMP": {
            "type": "boolean",
            "uniqueItems": false
          },
          "secureTokenVersion": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "secureTokenVersion",
          "clientStreamWriteAccess",
          "publishRequirePassword",
          "publishPasswordFile",
          "publishRTMPSecureURL",
          "publishIPBlackList",
          "publishIPWhiteList",
          "publishBlockDuplicateStreamNames",
          "publishValidEncoders",
          "publishAuthenticationMethod",
          "playMaximumConnections",
          "playRequireSecureConnection",
          "secureTokenSharedSecret",
          "secureTokenUseTEAForRTMP",
          "secureTokenIncludeClientIPInHash",
          "secureTokenHashAlgorithm",
          "secureTokenQueryParametersPrefix",
          "secureTokenOriginSharedSecret",
          "playIPBlackList",
          "playIPWhiteList",
          "playAuthenticationMethod"
        ],
        "type": "object"
      },
      "ShortUrlEncoderConfig": {
        "properties": {
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "statusCode": {
            "$ref": "#/components/schemas/Integer",
            "uniqueItems": false
          },
          "statusText": {
            "type": "string",
            "uniqueItems": false
          },
          "url": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "url",
          "statusText",
          "statusCode"
        ],
        "type": "object"
      },
      "SourceControlAction": {
        "properties": {
          "serverName": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "serverName"
        ],
        "type": "object"
      },
      "SourceControlConfig": {
        "properties": {
          "featureList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "firmware": {
            "type": "string",
            "uniqueItems": false
          },
          "manufacturer": {
            "type": "string",
            "uniqueItems": false
          },
          "model": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "manufacturer",
          "model",
          "firmware",
          "featureList"
        ],
        "type": "object"
      },
      "StreamConfigurationConfig": {
        "properties": {
          "createStorageDir": {
            "type": "boolean",
            "uniqueItems": false
          },
          "httpRandomizeMediaName": {
            "type": "boolean",
            "uniqueItems": false
          },
          "keyDir": {
            "type": "string",
            "uniqueItems": false
          },
          "liveStreamPacketizer": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "storageDir": {
            "type": "string",
            "uniqueItems": false
          },
          "storageDirExists": {
            "type": "boolean",
            "uniqueItems": false
          },
          "streamType": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "streamType",
          "storageDir",
          "createStorageDir",
          "storageDirExists",
          "keyDir",
          "liveStreamPacketizer",
          "httpRandomizeMediaName"
        ],
        "type": "object"
      },
      "StreamFileAppAction": {
        "properties": {
          "appName": {
            "type": "string",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "streamfileName": {
            "type": "string",
            "uniqueItems": false
          },
          "vhostName": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "serverName",
          "vhostName",
          "appName",
          "streamfileName"
        ],
        "type": "object"
      },
      "StreamFileAppConfig": {
        "properties": {
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "sourceControlDriver": {
            "type": "string",
            "uniqueItems": false
          },
          "sourceControlPassword": {
            "type": "string",
            "uniqueItems": false
          },
          "sourceControlUserName": {
            "type": "string",
            "uniqueItems": false
          },
          "uri": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "name",
          "uri",
          "sourceControlUserName",
          "sourceControlPassword",
          "sourceControlDriver"
        ],
        "type": "object"
      },
      "StreamFileAppConfigAdv": {
        "properties": {
          "advancedSettings": {
            "items": {
              "$ref": "#/components/schemas/AdvancedSetting",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "mpegTSFilters": {
            "items": {
              "$ref": "#/components/schemas/MpegTSFilter",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "sourceControlDriver": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "advancedSettings",
          "sourceControlDriver"
        ],
        "type": "object"
      },
      "StreamFilesAppConfig": {
        "properties": {
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "streamFiles": {
            "items": {
              "$ref": "#/components/schemas/ShortObject",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "streamFiles"
        ],
        "type": "object"
      },
      "StreamGroupAction": {
        "properties": {
          "appName": {
            "type": "string",
            "uniqueItems": false
          },
          "groupName": {
            "type": "string",
            "uniqueItems": false
          },
          "instanceName": {
            "type": "string",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "vhostName": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "serverName",
          "vhostName",
          "appName",
          "instanceName",
          "groupName"
        ],
        "type": "object"
      },
      "StreamGroupConfig": {
        "properties": {
          "groupName": {
            "type": "string",
            "uniqueItems": false
          },
          "instanceName": {
            "type": "string",
            "uniqueItems": false
          },
          "isTranscodeResult": {
            "type": "boolean",
            "uniqueItems": false
          },
          "members": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "groupName",
          "instanceName",
          "members",
          "isTranscodeResult"
        ],
        "type": "object"
      },
      "StreamGroupsConfig": {
        "properties": {
          "instanceName": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "streamGroups": {
            "items": {
              "$ref": "#/components/schemas/StreamGroupConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "instanceName",
          "streamGroups"
        ],
        "type": "object"
      },
      "StreamRecorderAction": {
        "properties": {
          "appName": {
            "type": "string",
            "uniqueItems": false
          },
          "instanceName": {
            "type": "string",
            "uniqueItems": false
          },
          "recorderName": {
            "type": "string",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "vhostName": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "serverName",
          "vhostName",
          "appName",
          "instanceName",
          "recorderName"
        ],
        "type": "object"
      },
      "StreamRecorderConfig": {
        "properties": {
          "applicationName": {
            "type": "string",
            "uniqueItems": false
          },
          "backBufferTime": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "baseFile": {
            "type": "string",
            "uniqueItems": false
          },
          "currentDuration": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "currentFile": {
            "type": "string",
            "uniqueItems": false
          },
          "currentSize": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "defaultAudioSearchPosition": {
            "type": "boolean",
            "uniqueItems": false
          },
          "defaultRecorder": {
            "type": "boolean",
            "uniqueItems": false
          },
          "fileFormat": {
            "type": "string",
            "uniqueItems": false
          },
          "fileTemplate": {
            "type": "string",
            "uniqueItems": false
          },
          "fileVersionDelegateName": {
            "type": "string",
            "uniqueItems": false
          },
          "instanceName": {
            "type": "string",
            "uniqueItems": false
          },
          "moveFirstVideoFrameToZero": {
            "type": "boolean",
            "uniqueItems": false
          },
          "option": {
            "type": "string",
            "uniqueItems": false
          },
          "outputPath": {
            "type": "string",
            "uniqueItems": false
          },
          "recordData": {
            "type": "boolean",
            "uniqueItems": false
          },
          "recorderErrorString": {
            "type": "string",
            "uniqueItems": false
          },
          "recorderName": {
            "type": "string",
            "uniqueItems": false
          },
          "recorderState": {
            "type": "string",
            "uniqueItems": false
          },
          "recordingStartTime": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "segmentDuration": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "segmentSchedule": {
            "type": "string",
            "uniqueItems": false
          },
          "segmentSize": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "segmentationType": {
            "type": "string",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "skipKeyFrameUntilAudioTimeout": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "splitOnTcDiscontinuity": {
            "type": "boolean",
            "uniqueItems": false
          },
          "startOnKeyFrame": {
            "type": "boolean",
            "uniqueItems": false
          },
          "timeScale": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "recorderName",
          "instanceName",
          "applicationName",
          "recorderState",
          "recorderErrorString",
          "defaultRecorder",
          "segmentationType",
          "outputPath",
          "baseFile",
          "fileFormat",
          "fileVersionDelegateName",
          "fileTemplate",
          "segmentDuration",
          "segmentSize",
          "segmentSchedule",
          "recordData",
          "startOnKeyFrame",
          "splitOnTcDiscontinuity",
          "backBufferTime",
          "option",
          "moveFirstVideoFrameToZero",
          "currentSize",
          "currentDuration",
          "currentFile",
          "recordingStartTime",
          "timeScale",
          "defaultAudioSearchPosition",
          "skipKeyFrameUntilAudioTimeout"
        ],
        "type": "object"
      },
      "StreamRecordersConfig": {
        "properties": {
          "instanceName": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "streamrecorder": {
            "items": {
              "$ref": "#/components/schemas/StreamRecorderConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "instanceName",
          "streamrecorder"
        ],
        "type": "object"
      },
      "TranscoderAppConfig": {
        "properties": {
          "available": {
            "type": "boolean",
            "uniqueItems": false
          },
          "createTemplateDir": {
            "type": "boolean",
            "uniqueItems": false
          },
          "licensed": {
            "type": "boolean",
            "uniqueItems": false
          },
          "licenses": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "licensesInUse": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "liveStreamTranscoder": {
            "type": "string",
            "uniqueItems": false
          },
          "profileDir": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "templateDir": {
            "type": "string",
            "uniqueItems": false
          },
          "templates": {
            "$ref": "#/components/schemas/TranscoderTemplatesConfig",
            "uniqueItems": false
          },
          "templatesInUse": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "available",
          "licensed",
          "licenses",
          "licensesInUse",
          "templates",
          "liveStreamTranscoder",
          "templatesInUse",
          "profileDir",
          "templateDir",
          "createTemplateDir"
        ],
        "type": "object"
      },
      "TranscoderAppConfigAdv": {
        "properties": {
          "advancedSettings": {
            "items": {
              "$ref": "#/components/schemas/AdvancedSetting",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "advancedSettings"
        ],
        "type": "object"
      },
      "TranscoderEncodeAppConfig": {
        "properties": {
          "Overlays": {
            "items": {
              "$ref": "#/components/schemas/TranscoderOverlayEncodeConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "audioBitrate": {
            "type": "string",
            "uniqueItems": false
          },
          "audioCodec": {
            "type": "string",
            "uniqueItems": false
          },
          "crop": {
            "type": "string",
            "uniqueItems": false
          },
          "description": {
            "type": "string",
            "uniqueItems": false
          },
          "enable": {
            "type": "boolean",
            "uniqueItems": false
          },
          "fitMode": {
            "type": "string",
            "uniqueItems": false
          },
          "followSource": {
            "type": "boolean",
            "uniqueItems": false
          },
          "gpuid": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "height": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "implementation": {
            "type": "string",
            "uniqueItems": false
          },
          "interval": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "profile": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "sourceRectangle": {
            "type": "string",
            "uniqueItems": false
          },
          "streamName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          },
          "videoBitrate": {
            "type": "string",
            "uniqueItems": false
          },
          "videoCodec": {
            "type": "string",
            "uniqueItems": false
          },
          "width": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "name",
          "enable",
          "description",
          "streamName",
          "videoCodec",
          "implementation",
          "gpuid",
          "profile",
          "videoBitrate",
          "followSource",
          "interval",
          "fitMode",
          "width",
          "height",
          "crop",
          "sourceRectangle",
          "audioCodec",
          "audioBitrate",
          "Overlays"
        ],
        "type": "object"
      },
      "TranscoderEncodeAppConfigAdv": {
        "properties": {
          "advancedSettings": {
            "items": {
              "$ref": "#/components/schemas/AdvancedSetting",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "advancedSettings",
          "name"
        ],
        "type": "object"
      },
      "TranscoderEncodesAppConfig": {
        "properties": {
          "encodes": {
            "items": {
              "$ref": "#/components/schemas/ShortObject",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "encodes"
        ],
        "type": "object"
      },
      "TranscoderOverlayDecodeAppConfig": {
        "properties": {
          "align": {
            "type": "string",
            "uniqueItems": false
          },
          "checkForUpdates": {
            "type": "boolean",
            "uniqueItems": false
          },
          "description": {
            "type": "string",
            "uniqueItems": false
          },
          "enable": {
            "type": "boolean",
            "uniqueItems": false
          },
          "height": {
            "type": "string",
            "uniqueItems": false
          },
          "imagePath": {
            "type": "string",
            "uniqueItems": false
          },
          "index": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "opacity": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "overlayName": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          },
          "width": {
            "type": "string",
            "uniqueItems": false
          },
          "x": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "y": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "overlayName",
          "description",
          "enable",
          "imagePath",
          "index",
          "checkForUpdates",
          "opacity",
          "x",
          "y",
          "width",
          "height",
          "align"
        ],
        "type": "object"
      },
      "TranscoderOverlayEncodeAppConfig": {
        "properties": {
          "align": {
            "type": "string",
            "uniqueItems": false
          },
          "checkForUpdates": {
            "type": "boolean",
            "uniqueItems": false
          },
          "description": {
            "type": "string",
            "uniqueItems": false
          },
          "enable": {
            "type": "boolean",
            "uniqueItems": false
          },
          "height": {
            "type": "string",
            "uniqueItems": false
          },
          "imagePath": {
            "type": "string",
            "uniqueItems": false
          },
          "index": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "opacity": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "overlayName": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          },
          "width": {
            "type": "string",
            "uniqueItems": false
          },
          "x": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "y": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "overlayName",
          "description",
          "enable",
          "imagePath",
          "index",
          "checkForUpdates",
          "opacity",
          "x",
          "y",
          "width",
          "height",
          "align",
          "name"
        ],
        "type": "object"
      },
      "TranscoderStreamNameGroupAppConfig": {
        "properties": {
          "Members": {
            "items": {
              "$ref": "#/components/schemas/TranscoderMemberConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "description": {
            "type": "string",
            "uniqueItems": false
          },
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "streamName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "name",
          "description",
          "streamName",
          "Members"
        ],
        "type": "object"
      },
      "TranscoderStreamNameGroupsAppConfig": {
        "properties": {
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "streamNameGroups": {
            "items": {
              "$ref": "#/components/schemas/ShortObject",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "streamNameGroups"
        ],
        "type": "object"
      },
      "TranscoderTemplateAppAction": {
        "properties": {
          "appName": {
            "type": "string",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "templateName": {
            "type": "string",
            "uniqueItems": false
          },
          "vhostName": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "serverName",
          "vhostName",
          "appName",
          "templateName"
        ],
        "type": "object"
      },
      "TranscoderTemplateAppConfig": {
        "properties": {
          "deinterlace": {
            "type": "boolean",
            "uniqueItems": false
          },
          "description": {
            "type": "string",
            "uniqueItems": false
          },
          "encodes": {
            "items": {
              "$ref": "#/components/schemas/TranscoderEncodeConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "implementation": {
            "type": "string",
            "uniqueItems": false
          },
          "implementationScale": {
            "type": "string",
            "uniqueItems": false
          },
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "overlays": {
            "items": {
              "$ref": "#/components/schemas/TranscoderOverlayDecodeConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "streamNameGroups": {
            "items": {
              "$ref": "#/components/schemas/TranscoderStreamNameGroupConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "name",
          "description",
          "implementation",
          "implementationScale",
          "deinterlace",
          "encodes",
          "streamNameGroups",
          "overlays"
        ],
        "type": "object"
      },
      "TranscoderTemplateAppConfigAdv": {
        "properties": {
          "advancedSettings": {
            "items": {
              "$ref": "#/components/schemas/AdvancedSetting",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "name": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "advancedSettings",
          "name"
        ],
        "type": "object"
      },
      "TranscoderTemplatesAppConfig": {
        "properties": {
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "templates": {
            "items": {
              "$ref": "#/components/schemas/ShortObject",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          },
          "vhostName": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "vhostName",
          "templates"
        ],
        "type": "object"
      },
      "VerimatrixStreamMapConfig": {
        "properties": {
          "keyInterval": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "order": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "posCount": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "resID": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "streamName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "streamName",
          "order",
          "resID",
          "posCount",
          "keyInterval"
        ],
        "type": "object"
      },
      "VerimatrixStreamMapsConfig": {
        "properties": {
          "filename": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "verimatrixStreamMaps": {
            "items": {
              "$ref": "#/components/schemas/VerimatrixStreamMapConfig",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "filename",
          "verimatrixStreamMaps"
        ],
        "type": "object"
      },
      "VideoSettings": {
        "properties": {
          "bitrate": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "framerate": {
            "format": "double",
            "type": "number",
            "uniqueItems": false
          },
          "height": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          },
          "width": {
            "format": "int32",
            "type": "integer",
            "uniqueItems": false
          }
        },
        "required": [
          "framerate",
          "width",
          "height",
          "bitrate"
        ],
        "type": "object"
      },
      "WSCRESTProxyConfig": {
        "properties": {
          "apiRequest": {
            "type": "string",
            "uniqueItems": false
          },
          "encrypted": {
            "type": "boolean",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "encrypted",
          "apiRequest"
        ],
        "type": "object"
      },
      "WebRTCConfig": {
        "properties": {
          "debugLog": {
            "type": "boolean",
            "uniqueItems": false
          },
          "enablePlay": {
            "type": "boolean",
            "uniqueItems": false
          },
          "enablePublish": {
            "type": "boolean",
            "uniqueItems": false
          },
          "enableQuery": {
            "type": "boolean",
            "uniqueItems": false
          },
          "iceCandidateIpAddresses": {
            "type": "string",
            "uniqueItems": false
          },
          "preferredCodecsAudio": {
            "type": "string",
            "uniqueItems": false
          },
          "preferredCodecsVideo": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "udpBindAddress": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "enablePublish",
          "enablePlay",
          "enableQuery",
          "iceCandidateIpAddresses",
          "udpBindAddress",
          "preferredCodecsAudio",
          "preferredCodecsVideo",
          "debugLog"
        ],
        "type": "object"
      },
      "WebRTCConfigAdv": {
        "properties": {
          "advancedSettings": {
            "items": {
              "$ref": "#/components/schemas/AdvancedSetting",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "advancedSettings"
        ],
        "type": "object"
      },
      "MediaCacheConfig3": {
        "properties": {
          "maxPendingReadAheadRequestSize": {
            "type": "string",
            "uniqueItems": false
          },
          "maxPendingReadAheadRequestSizeAutoValue": {
            "type": "string",
            "uniqueItems": false
          },
          "maxPendingWriteRequestSize": {
            "type": "string",
            "uniqueItems": false
          },
          "maxPendingWriteRequestSizeAutoValue": {
            "type": "string",
            "uniqueItems": false
          },
          "readAheadThreadPoolSize": {
            "type": "string",
            "uniqueItems": false
          },
          "readAheadThreadPoolSizeAutoValue": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "sources": {
            "items": {
              "$ref": "#/components/schemas/MediaCacheSourceConfig3",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "stores": {
            "items": {
              "$ref": "#/components/schemas/MediaCacheStoreConfig3",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          },
          "writerThreadPoolSize": {
            "type": "string",
            "uniqueItems": false
          },
          "writerThreadPoolSizeAutoValue": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "writerThreadPoolSize",
          "writerThreadPoolSizeAutoValue",
          "readAheadThreadPoolSize",
          "readAheadThreadPoolSizeAutoValue",
          "maxPendingWriteRequestSize",
          "maxPendingWriteRequestSizeAutoValue",
          "maxPendingReadAheadRequestSize",
          "maxPendingReadAheadRequestSizeAutoValue",
          "stores",
          "sources"
        ],
        "type": "object"
      },
      "MediaCacheSourceConfig3": {
        "properties": {
          "basePath": {
            "type": "string",
            "uniqueItems": false
          },
          "awsAccessKeyId": {
            "type": "string",
            "uniqueItems": false
          },
          "awsSecretAccessKey": {
            "type": "string",
            "uniqueItems": false
          },
          "azureAccountKey": {
            "type": "string",
            "uniqueItems": false
          },
          "azureAccountName": {
            "type": "string",
            "uniqueItems": false
          },
          "azureContainerName": {
            "type": "string",
            "uniqueItems": false
          },
          "baseClass": {
            "type": "string",
            "uniqueItems": false
          },
          "description": {
            "type": "string",
            "uniqueItems": false
          },
          "googleEncMethod": {
            "type": "string",
            "uniqueItems": false
          },
          "googleServiceID": {
            "type": "string",
            "uniqueItems": false
          },
          "googleServiceKey": {
            "type": "string",
            "uniqueItems": false
          },
          "googleServicePrivateKeyFile": {
            "type": "string",
            "uniqueItems": false
          },
          "googleServicePrivateKeyPassword": {
            "type": "string",
            "uniqueItems": false
          },
          "httpReaderFactoryClass": {
            "type": "string",
            "uniqueItems": false
          },
          "isAmazonS3": {
            "type": "boolean",
            "uniqueItems": false
          },
          "isPassThru": {
            "type": "boolean",
            "uniqueItems": false
          },
          "maxTimeToLive": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "minTimeToLive": {
            "format": "int64",
            "type": "integer",
            "uniqueItems": false
          },
          "prefix": {
            "type": "string",
            "uniqueItems": false
          },
          "readerClass": {
            "type": "string",
            "uniqueItems": false
          },
          "s3BucketNameInDomain": {
            "type": "boolean",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "sourceName": {
            "type": "string",
            "uniqueItems": false
          },
          "type": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "sourceName",
          "type",
          "description",
          "basePath",
          "prefix",
          "minTimeToLive",
          "maxTimeToLive",
          "isAmazonS3",
          "s3BucketNameInDomain",
          "awsAccessKeyId",
          "awsSecretAccessKey",
          "isPassThru",
          "baseClass",
          "readerClass",
          "httpReaderFactoryClass",
          "azureAccountName",
          "azureContainerName",
          "azureAccountKey",
          "googleServiceID",
          "googleServiceKey",
          "googleServicePrivateKeyFile",
          "googleServicePrivateKeyPassword",
          "googleEncMethod"
        ],
        "type": "object"
      },
      "MediaCacheSourceConfigAdv3": {
        "properties": {
          "advancedSettings": {
            "items": {
              "$ref": "#/components/schemas/AdvancedSetting",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "advancedSettings"
        ],
        "type": "object"
      },
      "MediaCacheSourcesConfig3": {
        "properties": {
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "sources": {
            "items": {
              "$ref": "#/components/schemas/ShortObject",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "sources"
        ],
        "type": "object"
      },
      "MediaCacheStoreConfig3": {
        "properties": {
          "description": {
            "type": "string",
            "uniqueItems": false
          },
          "maxSize": {
            "type": "string",
            "uniqueItems": false
          },
          "path": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "storeName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          },
          "writeRate": {
            "type": "string",
            "uniqueItems": false
          },
          "writeRateMaxBucketSize": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "storeName",
          "description",
          "path",
          "maxSize",
          "writeRate",
          "writeRateMaxBucketSize"
        ],
        "type": "object"
      },
      "MediaCacheStoresConfig3": {
        "properties": {
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "stores": {
            "items": {
              "$ref": "#/components/schemas/ShortObject",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "stores"
        ],
        "type": "object"
      },
      "PublisherConfig3": {
        "properties": {
          "description": {
            "type": "string",
            "uniqueItems": false
          },
          "password": {
            "type": "string",
            "uniqueItems": false
          },
          "publisher": {
            "type": "string",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "publisher",
          "description",
          "password"
        ],
        "type": "object"
      },
      "PublishersConfig3": {
        "properties": {
          "publishers": {
            "items": {
              "$ref": "#/components/schemas/PublisherConfig3",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "saveFieldList": {
            "items": {
              "type": "string",
              "uniqueItems": false
            },
            "type": "array",
            "uniqueItems": false
          },
          "serverName": {
            "type": "string",
            "uniqueItems": false
          },
          "version": {
            "type": "string",
            "uniqueItems": false
          }
        },
        "required": [
          "version",
          "serverName",
          "publishers"
        ],
        "type": "object"
      }
    },
    "requestBodies": {
      "MediaCacheConfigAdv": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MediaCacheConfigAdv",
              "uniqueItems": false
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/MediaCacheConfigAdv",
              "uniqueItems": false
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/MediaCacheConfigAdv",
              "uniqueItems": false
            }
          }
        },
        "required": true
      },
      "MediaCacheSourceConfig": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MediaCacheSourceConfig",
              "uniqueItems": false
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/MediaCacheSourceConfig",
              "uniqueItems": false
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/MediaCacheSourceConfig",
              "uniqueItems": false
            }
          }
        },
        "required": true
      },
      "MediaCacheSourceConfigAdv": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MediaCacheSourceConfigAdv",
              "uniqueItems": false
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/MediaCacheSourceConfigAdv",
              "uniqueItems": false
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/MediaCacheSourceConfigAdv",
              "uniqueItems": false
            }
          }
        },
        "required": true
      },
      "MediaCacheStoreConfig": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MediaCacheStoreConfig",
              "uniqueItems": false
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/MediaCacheStoreConfig",
              "uniqueItems": false
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/MediaCacheStoreConfig",
              "uniqueItems": false
            }
          }
        },
        "required": true
      },
      "MediaCacheStoreConfigAdv": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MediaCacheStoreConfigAdv",
              "uniqueItems": false
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/MediaCacheStoreConfigAdv",
              "uniqueItems": false
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/MediaCacheStoreConfigAdv",
              "uniqueItems": false
            }
          }
        },
        "required": true
      },
      "PublisherConfig": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PublisherConfig",
              "uniqueItems": false
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/PublisherConfig",
              "uniqueItems": false
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/PublisherConfig",
              "uniqueItems": false
            }
          }
        },
        "required": true
      },
      "UserConfig": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UserConfig",
              "uniqueItems": false
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/UserConfig",
              "uniqueItems": false
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/UserConfig",
              "uniqueItems": false
            }
          }
        },
        "required": true
      },
      "PublisherVhostConfig": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PublisherVhostConfig",
              "uniqueItems": false
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/PublisherVhostConfig",
              "uniqueItems": false
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/PublisherVhostConfig",
              "uniqueItems": false
            }
          }
        },
        "required": true
      },
      "SMILFileConfig": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SMILFileConfig",
              "uniqueItems": false
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/SMILFileConfig",
              "uniqueItems": false
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/SMILFileConfig",
              "uniqueItems": false
            }
          }
        },
        "required": true
      },
      "StartupStreamConfig": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/StartupStreamConfig",
              "uniqueItems": false
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/StartupStreamConfig",
              "uniqueItems": false
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/StartupStreamConfig",
              "uniqueItems": false
            }
          }
        },
        "required": true
      },
      "StreamFileConfig": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/StreamFileConfig",
              "uniqueItems": false
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/StreamFileConfig",
              "uniqueItems": false
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/StreamFileConfig",
              "uniqueItems": false
            }
          }
        },
        "required": true
      },
      "TranscoderEncodeConfig": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TranscoderEncodeConfig",
              "uniqueItems": false
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/TranscoderEncodeConfig",
              "uniqueItems": false
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/TranscoderEncodeConfig",
              "uniqueItems": false
            }
          }
        },
        "required": true
      },
      "TranscoderStreamNameGroupConfig": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TranscoderStreamNameGroupConfig",
              "uniqueItems": false
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/TranscoderStreamNameGroupConfig",
              "uniqueItems": false
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/TranscoderStreamNameGroupConfig",
              "uniqueItems": false
            }
          }
        },
        "required": true
      },
      "TranscoderTemplateConfig": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TranscoderTemplateConfig",
              "uniqueItems": false
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/TranscoderTemplateConfig",
              "uniqueItems": false
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/TranscoderTemplateConfig",
              "uniqueItems": false
            }
          }
        },
        "required": true
      },
      "ApplicationConfig": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApplicationConfig",
              "uniqueItems": false
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/ApplicationConfig",
              "uniqueItems": false
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/ApplicationConfig",
              "uniqueItems": false
            }
          }
        },
        "required": true
      },
      "ApplicationConfigAdv": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApplicationConfigAdv",
              "uniqueItems": false
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/ApplicationConfigAdv",
              "uniqueItems": false
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/ApplicationConfigAdv",
              "uniqueItems": false
            }
          }
        },
        "required": true
      },
      "PublisherAppConfig": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PublisherAppConfig",
              "uniqueItems": false
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/PublisherAppConfig",
              "uniqueItems": false
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/PublisherAppConfig",
              "uniqueItems": false
            }
          }
        },
        "required": true
      },
      "PushPublishStreamAppConfig": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PushPublishStreamAppConfig",
              "uniqueItems": false
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/PushPublishStreamAppConfig",
              "uniqueItems": false
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/PushPublishStreamAppConfig",
              "uniqueItems": false
            }
          }
        },
        "required": true
      },
      "SMILFileAppConfig": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SMILFileAppConfig",
              "uniqueItems": false
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/SMILFileAppConfig",
              "uniqueItems": false
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/SMILFileAppConfig",
              "uniqueItems": false
            }
          }
        },
        "required": true
      },
      "StreamFileAppConfig": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/StreamFileAppConfig",
              "uniqueItems": false
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/StreamFileAppConfig",
              "uniqueItems": false
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/StreamFileAppConfig",
              "uniqueItems": false
            }
          }
        },
        "required": true
      },
      "StreamRecorderConfig": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/StreamRecorderConfig",
              "uniqueItems": false
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/StreamRecorderConfig",
              "uniqueItems": false
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/StreamRecorderConfig",
              "uniqueItems": false
            }
          }
        },
        "required": true
      },
      "TranscoderEncodeAppConfig": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TranscoderEncodeAppConfig",
              "uniqueItems": false
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/TranscoderEncodeAppConfig",
              "uniqueItems": false
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/TranscoderEncodeAppConfig",
              "uniqueItems": false
            }
          }
        },
        "required": true
      },
      "TranscoderStreamNameGroupAppConfig": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TranscoderStreamNameGroupAppConfig",
              "uniqueItems": false
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/TranscoderStreamNameGroupAppConfig",
              "uniqueItems": false
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/TranscoderStreamNameGroupAppConfig",
              "uniqueItems": false
            }
          }
        },
        "required": true
      },
      "TranscoderTemplateAppConfig": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TranscoderTemplateAppConfig",
              "uniqueItems": false
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/TranscoderTemplateAppConfig",
              "uniqueItems": false
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/TranscoderTemplateAppConfig",
              "uniqueItems": false
            }
          }
        },
        "required": true
      },
      "MediaCacheSourceConfig3": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MediaCacheSourceConfig3",
              "uniqueItems": false
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/MediaCacheSourceConfig3",
              "uniqueItems": false
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/MediaCacheSourceConfig3",
              "uniqueItems": false
            }
          }
        },
        "required": true
      },
      "MediaCacheSourceConfigAdv3": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MediaCacheSourceConfigAdv3",
              "uniqueItems": false
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/MediaCacheSourceConfigAdv3",
              "uniqueItems": false
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/MediaCacheSourceConfigAdv3",
              "uniqueItems": false
            }
          }
        },
        "required": true
      },
      "MediaCacheStoreConfig3": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MediaCacheStoreConfig3",
              "uniqueItems": false
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/MediaCacheStoreConfig3",
              "uniqueItems": false
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/MediaCacheStoreConfig3",
              "uniqueItems": false
            }
          }
        },
        "required": true
      },
      "PublisherConfig3": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PublisherConfig3",
              "uniqueItems": false
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/PublisherConfig3",
              "uniqueItems": false
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/PublisherConfig3",
              "uniqueItems": false
            }
          }
        },
        "required": true
      }
    }
  }
}